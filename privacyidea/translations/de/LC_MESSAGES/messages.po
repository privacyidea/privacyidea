# German translations for PROJECT.
# Copyright (C) 2017 ORGANIZATION
# This file is distributed under the same license as the PROJECT project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: PROJECT VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2018-01-15 23:33+0100\n"
"PO-Revision-Date: 2018-01-15 23:34+0100\n"
"Last-Translator: Cornelius Kölbel <cornelius.koelbel@netknights.it>\n"
"Language: de\n"
"Language-Team: de <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"
"X-Generator: Poedit 1.8.7.1\n"

#: api/policy.py:171
msgid "The name of the policy may only contain the characters a-zA-Z0-9_."
msgstr "Der Name der Richtlinie darf nur die Zeichen a-zA-Z0-9_ enthalten."

#: api/policy.py:175
msgid "T'check' is an invalid policy name."
msgstr "'check' ist ein ungültiger Name für eine Richtlinie."

#: lib/decorators.py:42 lib/token.py:1946
msgid "This action is not possible, since the token is locked"
msgstr "Diese Aktion kann nicht durchgeführt werden, weil der Token gesperrt ist."

#: lib/decorators.py:90
msgid "You need to specify a serial or a user."
msgstr "Sie müssen eine Seriennummer oder einen Benutzer angeben."

#: lib/error.py:168
msgid "You either need to provide user or serial"
msgstr "Sie müssen entweder eine Seriennumer oder einen Benutzer angeben."

#: lib/policy.py:1003
msgid "Define in which resolver the user should be registered."
msgstr "Legen Sie fest, in welchem Resolver die Benutzer registriert werden sollen."

#: lib/policy.py:1007
msgid "Define in which realm the user should be registered."
msgstr "Legen Sie fest, in welchem Realm die Benutzer registriert werden sollen."

#: lib/policy.py:1011
msgid "The SMTP server configuration, that should be used to send the registration email."
msgstr "Die SMTP-Server-Konfiguration mit der Registrierungs-Emails versendet werden."

#: lib/policy.py:1015
msgid "Only users with this email address are allowed to register. This is a regular expression."
msgstr "Nur Benutzer mit dieser Email-Adresse können sich registrieren. (Regulärer Ausdruck)"

#: lib/policy.py:1020
msgid "The body of the registration email. Use '{regkey}' as tagfor the registration key."
msgstr "Der Body der Registrierungs-Email. Benutze '{regkey}' als Tag für den Registrierungstoken."

#: lib/policy.py:1026
msgid "Admin is allowed to enable tokens."
msgstr "Der Administrator kann Token aktivieren."

#: lib/policy.py:1030
msgid "Admin is allowed to disable tokens."
msgstr "Der Adminitrator kann Token deaktivieren."

#: lib/policy.py:1034
msgid "Admin is allowed to set token properties."
msgstr "Der Administrator kann Token-Eigenschaften verändern."

#: lib/policy.py:1039
msgid "Admin is allowed to set the OTP PIN of tokens."
msgstr "Der Administrator kann die OTP PIN von Token setzen."

#: lib/policy.py:1045
msgid "Admin is allowed to manually set and delete token info."
msgstr "Der Administrator kann Tokeninformationen ändern und löschen."

#: lib/policy.py:1049
msgid "Admin is allowed to set the OTP PIN during enrollment."
msgstr "Der Administrator kann die OTP PIN während des Rollouts setzen."

#: lib/policy.py:1054
msgid "Admin is allowed to resync tokens."
msgstr "Der Administrator kann Token resynchronisieren."

#: lib/policy.py:1058
msgid "Admin is allowed to reset the Failcounter of a token."
msgstr "Der Administrator kann den Fehlerzähler (Failcounter) von Token zurücksetzen."

#: lib/policy.py:1064
msgid "Admin is allowed to revoke a token"
msgstr "Der Administrator kann Token revozieren."

#: lib/policy.py:1068
msgid "Admin is allowed to assign a token to a user."
msgstr "Der Administrator kann Token einem Benutzer zuweisen."

#: lib/policy.py:1074
msgid "Admin is allowed to remove the token from a user, i.e. unassign a token."
msgstr "Der Administrator kann die Zuweisung eines Tokens aufheben."

#: lib/policy.py:1081
msgid "Admin is allowed to import token files."
msgstr "Der Administrator kann eine Token-Seed-Datei importieren."

#: lib/policy.py:1086
msgid "Admin is allowed to remove tokens from the database."
msgstr "Der Administrator kann Token aus der Datenbank löschen."

#: lib/policy.py:1092
msgid "Admin is allowed to view the list of the users."
msgstr "Der Adminsitrator kann die Benutzerliste anzeigen."

#: lib/policy.py:1098
msgid "The Admin is allowed to list the machines."
msgstr "Der Administrator kann Maschinen auflisten."

#: lib/policy.py:1103
msgid "The Admin is allowed to attach and detach tokens to machines."
msgstr "Der Administrator kann Token Maschinen zuweisen und diese Zuweisung wieder aufheben."

#: lib/policy.py:1110
msgid "The Admin is allowed to fetch authentication items of tokens assigned to machines."
msgstr "Der Administrator kann Authentifizierungsinformationen der den Maschinen zugewiesenen Token erfragen."

#: lib/policy.py:1115
msgid "Admin is allowed to manage the realms of a token."
msgstr "Der Administrator kann die Realms eines Tokens bearbeiten."

#: lib/policy.py:1120
msgid "Admin is allowed to retrieve a serial for a given OTP value."
msgstr "Der Administrator kann die Seriennummer zu einem OTP-Wert bestimmen."

#: lib/policy.py:1125
msgid "Admin is allowed to retrieve random keys from privacyIDEA."
msgstr "Der Adminsitrator kann Zufallszahlen von privacyIDEA anfordern."

#: lib/policy.py:1129
msgid "Admin is allowed to copy the PIN of one token to another token."
msgstr "Der Administrator kann die OTP PIN eines Tokens zu einem anderen kopieren."

#: lib/policy.py:1135
msgid "Admin is allowed to copy the assigned user to another token, i.e. assign a user ot another token."
msgstr "Der Administrator kann die Zuweisung eines Benutzer zu einem Token von einem Token zu einem anderen Token übertragen. D.h. den Benutzer noch einem anderen Token zuweisen."

#: lib/policy.py:1142
msgid "Admin is allowed to trigger the lost token workflow."
msgstr "Der Administrator kann den Workflow \"Verlorener Token\" durchführen."

#: lib/policy.py:1148
msgid "Admin is allowed to write and modify the system configuration."
msgstr "Der Administrator kann die Systemkonfiguration verändern."

#: lib/policy.py:1153
msgid "Admin is allowed to delete keys in the system configuration."
msgstr "Der Administrator kann Einstellungen in der Systemkonfiguration löschen."

#: lib/policy.py:1159
msgid "Admin is allowed to export a documentation of the complete configuration including resolvers and realm."
msgstr "Der Administrator kann eine Dokumentation der kompletten Konfiguration exportieren. Dies beinhaltet auch die Konfiguration von Resolvern und Realms."

#: lib/policy.py:1167
msgid "Admin is allowed to write and modify the policies."
msgstr "Der Administrator kann Richtlinien anlegen und bearbeiten."

#: lib/policy.py:1172
msgid "Admin is allowed to delete policies."
msgstr "Der Administrator kann Richtlinien löschen."

#: lib/policy.py:1177
msgid "Admin is allowed to write and modify the resolver and realm configuration."
msgstr "Der Administrator kann die Konfiguration von Resolvern und Realms anlegen und bearbeiten."

#: lib/policy.py:1184
msgid "Admin is allowed to delete resolvers and realms."
msgstr "Der Administrator kann Resolver und Realms löschen."

#: lib/policy.py:1189
msgid "Admin is allowed to create new CA Connector definitions and modify existing ones."
msgstr "Der Administrator kann Konfigurationen der Zertifizierungsstellen anlegen und bearbeiten."

#: lib/policy.py:1195
msgid "Admin is allowed to delete CA Connector definitions."
msgstr "Der Administrator kann Konfigurationen der Zertifizierungsstellen löschen."

#: lib/policy.py:1200
msgid "Admin is allowed to write and modify the machine resolvers."
msgstr "Der Administrator kann Maschinenkonfigurationen anlegen und bearbeiten."

#: lib/policy.py:1206
msgid "Admin is allowed to delete machine resolvers."
msgstr "Der Administrator kann Maschinenkonfigurationen löschen."

#: lib/policy.py:1213 lib/policy.py:1374
msgid "Set the maximum allowed length of the OTP PIN."
msgstr "Die maximal erlaubte Länge einer OTP PIN."

#: lib/policy.py:1218 lib/policy.py:1379
msgid "Set the minimum required length of the OTP PIN."
msgstr "Die minimal geforderte Länge einer OTP PIN."

#: lib/policy.py:1222 lib/policy.py:1383
msgid "Specifiy the required contents of the OTP PIN. (c)haracters, (n)umeric, (s)pecial, (o)thers. [+/-]!"
msgstr "Der erforderliche Inhalt einer OTP PIN. 'c' für Buchstaben, 'n' für Ziffern, 's' für Sonderzeichen, 'o' für andere. '+' und '-' nutzbar!"

#: lib/policy.py:1228
msgid "Admin is allowed to view the Audit log."
msgstr "Der Adminsitrator kann das Audit-Log ansehen."

#: lib/policy.py:1232
msgid "The admin will only see audit entries of the last 10d, 3m or 2y."
msgstr "Der Administrator kann nur Audit-Einträge der letzen 10 Tage (10d), 3 Monate (3m) oder 2 Jahre (2y) sehen."

#: lib/policy.py:1237
msgid "The admin is allowed to download the complete auditlog."
msgstr "Der  Administrator kann das Audit-Log herunterladen."

#: lib/policy.py:1242
msgid "Admin is allowed to add users in a userstore/UserIdResolver."
msgstr "Der Adminstrator kann Benutzer hinzufügen."

#: lib/policy.py:1247
msgid "Admin is allowed to update the users data in a userstore."
msgstr "Der Administrator kann Benutzerdaten editieren."

#: lib/policy.py:1252
msgid "Admin is allowed to delete a user object in a userstore."
msgstr "Der Administrator kann Benutzer in der Benutzerquelle löschen."

#: lib/policy.py:1257
msgid "Admin is allowed to set the password of the HSM/Security Module."
msgstr "Der Administrator kann das Passwort des HSM/Sicherheitsmoduls eingeben."

#: lib/policy.py:1261
msgid "Admin is allowed to retrieve the list of active challenges."
msgstr "Der Administrator kann eine Liste der aktiven Challenges anzeigen."

#: lib/policy.py:1267
msgid "Admin is allowed to write new SMTP server definitions."
msgstr "Der Administrator kann SMTP-Server-Konfigurationen bearbeiten."

#: lib/policy.py:1272
msgid "Admin is allowed to write new RADIUS server definitions."
msgstr "Der Administrator kann RADIUS-Server-Konfigurationen bearbeiten."

#: lib/policy.py:1278
msgid "Admin is allowed to write remote privacyIDEA server definitions."
msgstr "Der Administrator kann Remote privacyIDEA Server definieren."

#: lib/policy.py:1285
msgid "Admin is allowed to write and modify the event handling configuration."
msgstr "Der Administrator kann Event-Handler-Definitionen bearbeiten."

#: lib/policy.py:1291
msgid "Admin is allowed to write and modify SMS gateway definitions."
msgstr "Der Administrator kann SMS-Gateway-Konfigurationen bearbeiten."

#: lib/policy.py:1297
msgid "Admin is allowed to get the list of authenticated clients and their types."
msgstr "Der Administrator kann die Liste der authentifizierten Clients-Applikationen anzeigen."

#: lib/policy.py:1304
msgid "Admin is allowed to add and delete component subscriptions."
msgstr "Der Administrator kann Subskriptionen importieren und löschen."

#: lib/policy.py:1310
msgid "The Admin is allowed to trigger a challenge for e.g. SMS OTP token."
msgstr "Der Administrator kann eine Challenge für bspw. SMS OTP Token auslösen."

#: lib/policy.py:1320
msgid "The user is allowed to assign an existing token that is not yet assigned using the token serial number."
msgstr "Der Benutzer darf sich einen noch nicht zugewiesenen Token anhand der Seriennummer zuweisen."

#: lib/policy.py:1326
msgid "The user is allowed to disable his own tokens."
msgstr "Der Benutzer darf seine eigenen Token deaktivieren."

#: lib/policy.py:1332
msgid "The user is allowed to enable his own tokens."
msgstr "Der Benutzer darf seine eigenen Token aktivieren."

#: lib/policy.py:1338
msgid "The user is allowed to delete his own tokens."
msgstr "Der Benutzer darf seine eigenen Token löschen."

#: lib/policy.py:1344
msgid "The user is allowed to unassign his own tokens."
msgstr "Der Benutzer darf die Zuweisung seiner eigenen Token aufheben. (Danach ist dies nicht mehr sein Token!)"

#: lib/policy.py:1349
msgid "The user is allowed to resyncronize his tokens."
msgstr "Der Benutzer kann seine eigenen Token resynchronisieren."

#: lib/policy.py:1354
msgid "The user is allowed to revoke a token"
msgstr "Der Benutzer darf seine eigenen Token revozieren."

#: lib/policy.py:1359
msgid "The user is allowed to reset the failcounter of his tokens."
msgstr "Der Benutzer darf den Fehlerzähler seiner eigenen Token zurücksetzen."

#: lib/policy.py:1364
msgid "The user is allowed to set the OTP PIN of his tokens."
msgstr "Der Benutzer darf die OTP PINs seiner Token setzen."

#: lib/policy.py:1369
msgid "The user is allowed to set the OTP PIN during enrollment."
msgstr "Der Benutzer kann die OTP PIN während des Rollouts setzen."

#: lib/policy.py:1391
msgid "Allow the user to view his own token history."
msgstr "Der Benutzer kann die Tokenhistorie seiner eigenen Token anzeigen."

#: lib/policy.py:1394
msgid "The user will only see audit entries of the last 10d, 3m or 2y."
msgstr "Der Benutzer kann nur die Audit-Einträge der letzten 10 Tage (10d), 3 Monate (3m) oder 2 Jahre (2y) sehen."

#: lib/policy.py:1398
msgid "The user is allowed to view his own user information."
msgstr "Der Benutzer kann seine eigenen Benutzerinformationen sehen."

#: lib/policy.py:1402
msgid "The user is allowed to update his own user information, like changing his password."
msgstr "Der Benutzer darf seine eigenen Benutzerinformationen bearbeiten."

#: lib/policy.py:1407
msgid "The user is allowed to do a password reset in an editable UserIdResolver."
msgstr "Der Benutzer darf sein Passwort im Benutzerverzeichnis setzen."

#: lib/policy.py:1416
msgid "Limit the number of allowed tokens in a realm."
msgstr "Maximale Anzahl von Token in einem realm."

#: lib/policy.py:1420
msgid "Limit the number of tokens a user may have assigned."
msgstr "Maximale Anzahl an Token, die ein Benutzer besitzen darf."

#: lib/policy.py:1426
msgid "Set a random OTP PIN with this length for a token."
msgstr "Setze eine zufällige OTP PIN mit dieser Länge."

#: lib/policy.py:1431
msgid "In case of a random OTP PIN use this python module to process the PIN."
msgstr "Wenn eine zufällige OTP PIN gesetzt wird, nutze dieses Python Modul, um die PIN zu verarbeiten."

#: lib/policy.py:1436
msgid "If the administrator sets the OTP PIN during enrollment or later, the user will have to change the PIN during first use."
msgstr "Wenn der Administrator die OTP PIN setzt (während des Ausrollens oder später) muss der Benutzer die OTP PIN zurücksetzen."

#: lib/policy.py:1443
msgid "The user needs to change his PIN on a regular basis. To change the PIN every 180 days, enter '180d'."
msgstr "Der Benutzer muss die OTP PIN regelmäßig ändern. Um die PIN all 180 Tage zu ändern, geben Sie '180d' ein."

#: lib/policy.py:1450
msgid "The OTP PIN can be hashed or encrypted. Hashing the PIN is the default behaviour."
msgstr "Die OTP PIN wird standardmäßig gehasht abgespeichert. Wenn sie verschlüsselt abgespeichert werden soll, wählen Sie diese Option."

#: lib/policy.py:1455
msgid "Set label for a new enrolled Google Authenticator. Possible tags are <u> (user), <r> (realm), <s> (serial)."
msgstr "Setzt die Beschriftung für einen neu ausgerollten Google Authenticator oder vergleichbare App. Mögliche Tags sind <u> (Benutzer), <r> (Realm) oder <s> (Seriennummer)."

#: lib/policy.py:1461
msgid "This is the issuer label for new enrolled Google Authenticators."
msgstr "Die Bezeichnung des Ausstellers für neu ausgerollte Google Authenticator oder vergleichbare Apps."

#: lib/policy.py:1468
msgid "Users can assign a token just by using the unassigned token to authenticate."
msgstr "Der Benutzer kann sich automatisch einen Token zuweisen, indem er sich mit einem noch nicht zugewiesenen Token anmeldet."

#: lib/policy.py:1474
msgid "The length of the password in case of temporary token (lost token)."
msgstr "Die Länge des Passworts für einen temporären Token (Workflow \"Verlorener Token\")"

#: lib/policy.py:1478
msgid "The contents of the temporary password, described by the characters C, c, n, s."
msgstr "Der Inhalt des temporären Passworts. 'C': Große Buchstaben, 'c': kleine Buchstaben, 'n': Ziffern, 's': Sonderzeichen."

#: lib/policy.py:1483
msgid "The length of the validity for the temporary token (in days)."
msgstr "Die Gültigkeitsdauer des temporären Passworts in Tagen."

#: lib/policy.py:1491
msgid "Either use the Token PIN , use the Userstore Password or use no fixed password component."
msgstr "Der erste Wissensfaktor kann entweder die OTP PIN, das Passwort aus der Benutzerquelle oder nichts sein."

#: lib/policy.py:1496
msgid "This is a whitespace separated list of tokentypes, that can be used with challenge response."
msgstr "Liste von Tokentypen, die für Challenge Response verwendet werden können. (Trennung durch Leerzeichen)"

#: lib/policy.py:1502
msgid "If set, the user in this realm will be authenticated against the userstore or against the given RADIUS config, if the user has no tokens assigned."
msgstr "Wenn einem Benutzer kein Token zugewiesen ist, werden sein Passwort gegen die hier eingestellte RADIUS-Server-Konfiguration geprüft."

#: lib/policy.py:1509
msgid "If the user has no token, the authentication request for this user will always be true."
msgstr "Wenn einem Benutzer kein Token zugewiesen ist, so wird eine Authentifizierungsanfrage für diesen Benutzer immer positiv beantwortet."

#: lib/policy.py:1514
msgid "If the user user does not exist, the authentication request for this non-existing user will always be true."
msgstr "Wenn der Benutzer nicht existiert, wird die Authentifizierungsanfrage immer positiv beantwortet."

#: lib/policy.py:1520
msgid "Can be used to modify the parameters pass, user and realm in an authentication request. See the documentation for an example."
msgstr "Hiermit können die Parameter pass, user und realm in einer Authentifizierungsanfrage verändert werden. Bitte lesen Sie die Dokumentation für mehr Details."

#: lib/policy.py:1526
msgid "If a user authenticates successfully reset the failcounter of all of his tokens."
msgstr "Wenn sich ein Benutzer erfolgreich authentisiert hat, werden die Fehlerzähler all seiner Token zurückgesetzt."

#: lib/policy.py:1531
msgid "Cache the password used for authentication and allow authentication with the same credentials for a certain amount of time. Specify timeout like 4h or 4h/5m."
msgstr "privacyIDEA cacht das Passwort und den OTP-Wert einer erfolgreichen Anmeldung. Somit kann für einen gewissen Zeitraum die Anmeldung mit den gleichen Credentials erfolgen. Die Zeit wird angegeben als 4h or 4h/5m."

#: lib/policy.py:1540
msgid "You can specify how many successful authentication requests a user is allowed to do in a given time. Specify like 1/5s, 2/10m, 10/1h - s, m, h being second, minute and hour."
msgstr "Sie können angeben, wie viele erfolgreiche Authentifizierungsanfragen ein Benutzer in einer gewissen Zeitspanne durchführen darf. Geben Sie an 1/5s, 2/10m oder 10/1h - Dabei sind (s) Sekunden, (m) Minuten und (h) Stunden."

#: lib/policy.py:1547
msgid "You can specify how many failed authentication requests a user is allowed to do in a given time. Specify like 1/5s, 2/10m, 10/1h - s, m, h being second, minute and hour."
msgstr "Sie können angeben, wie viele fehlgeschlagene Authentifizierungsversuche ein Benutzer in einer gewissen Zeit durchführen darf. Geben Sie bpsw. an 1/5s, 2/10m, 10/1h - (s) für Sekunden, (m) für Minuten und (h) für Stunden."

#: lib/policy.py:1554
msgid "You can specify in which time frame the user needs to authenticate again with this token. If the user authenticates later, authentication will fail. Specify like 30h, 7d or 1y."
msgstr "Sie können angeben, in welcher Zeit sich ein Benutzer erneut anmelden muss, bzw. wie lang die letzte erfolgreiche Anmeldung zurückliegen darf. Ansonsten wird der Anmeldeversuch fehlschlagen. Geben Sie bspw. an 30h, 7d oder 1y (1 Jahr)."

#: lib/policy.py:1561
msgid "The user will only be authenticated with this very tokentype."
msgstr "Der Benutzer kann sich nur mit diesem Tokentyp authentisieren."

#: lib/policy.py:1565
msgid "The user will only be authenticated if the serial number of the token matches this regexp."
msgstr "Der Benutzer kann sich nur mit einem Token anmelden, dessen Seriennummer auf diesen regulären Ausdruck passt."

#: lib/policy.py:1569
msgid "The user will only be authenticated if the tokeninfo field matches the regexp. key/<regexp>/"
msgstr "Die Autorisierung des Benutzers ist nur erfolgreich, wenn das Tokeninfo Feld auf den regulären Ausdruck passt. key/<regexp>/"

#: lib/policy.py:1574
msgid "The Realm of the user is set to this very realm. This is important if the user is not contained in the default realm and can not pass his realm."
msgstr "Der Benutzerrealm wird auf diesen Realm gesetzt. Dies kann genutzt werden, wenn die Benutzer nicht im Default-Realm sind und der Realm von der Applikation nicht übergeben werden kann."

#: lib/policy.py:1579
msgid "In case of successful authentication additional no detail information will be returned."
msgstr "Im Fall einer erfolgreichen Authentifizierung werden keine zusätzlichen Detail-Informationen zurückgeliefert."

#: lib/policy.py:1583
msgid "In case of failed authentication additional no detail information will be returned."
msgstr "Im Fall einer erfolglosen Authentifizierung werden keine zusätzlichen Detail-Informationen zurückgeliefert."

#: lib/policy.py:1587
msgid "In case of successful authentication user data will be added in the detail branch of the authentication response."
msgstr "Im Fall einer erfolgreichen Authentifizierung werden zusätzliche Benutzerdaten zurückgeliefert."

#: lib/policy.py:1592
msgid "In case of successful authentication the user resolver and realm will be added in the detail branch of the authentication response."
msgstr ""

#: lib/policy.py:1597
msgid "The sending of an API Auth Key is required duringauthentication. This avoids rogue authenticate requests against the /validate/check interface."
msgstr "Die Nutzung eines API Auth Key für die Authentifizierung ist notwendig. Dies verhindert unberechtigte Authentifizierungs-Versuche gegen das /validate/check Interface."

#: lib/policy.py:1606
msgid "If set to \"privacyIDEA\" the users and admins need to authenticate against privacyIDEA when they log in to the Web UI. Defaults to \"userstore\""
msgstr "Benutzer müssen sich entweder gegen privacyIDEA oder gegen die Benutzerquelle authentisieren."

#: lib/policy.py:1615
msgid "When searching in the user list, the search will only performed when pressing enter."
msgstr "Die Suche in der Benutzerliste erst nach Drücken der Entertaste ausführen."

#: lib/policy.py:1620
msgid "The action taken when a user is idle beyond the logout_time limit. Defaults to \"lockscreen\"."
msgstr "Diese Aktion wird ausgeführt, wenn der Benutzer zu lange inaktiv ist. Standard: \"lockscreen\"."

#: lib/policy.py:1628
msgid "The REMOTE_USER set by the webserver can be used to login to privacyIDEA or it will be ignored. Defaults to \"disable\"."
msgstr "Der Webserver REMOTE_USER wird für die Anmeldung am WebUI verwendet. Standard: \"disable\"."

#: lib/policy.py:1634
msgid "Set the time in seconds after which the user will be logged out from the WebUI. Default: 120"
msgstr "Die Zeit in Sekunden, nach denen der Bennutzer aus dem WebUI abgemeldet wird. Standard: 120"

#: lib/policy.py:1639
msgid "Set how many tokens should be displayed in the token view on one page."
msgstr "Anzahl der Tokens, die in der Tabelle auf der Tokenübersichtsseite angezeigt werden."

#: lib/policy.py:1644
msgid "Set how many users should be displayed in the user view on one page."
msgstr "Anzahl der Benutzer, die in der Tabelle auf der Tokenübersichtsseite angezeigt werden."

#: lib/policy.py:1649
msgid "Use your own html template for the web UI menu."
msgstr "Eine eigene HTML-Vorlage für das Menü im Web UI verwenden."

#: lib/policy.py:1653
msgid "Use your own html template for the web UI baseline/footer."
msgstr "Eine eigene HTML-Vorlage für die Fußzeile im Web UI verwenden."

#: lib/policy.py:1657
msgid "Whether the user ID and the resolver should be displayed in the token list."
msgstr "Die Benutzer ID und den Benutzer-Resolver in der Tokenliste anzeigen."

#: lib/policy.py:1662
msgid "The URL of a repository, where the policy templates can be found.  (Default https: //raw.githubusercontent.com/ privacyidea/policy-templates /master/templates/)"
msgstr "Die URL der Policy-Templates. (Default https: //raw.githubusercontent.com/ privacyidea/policy-templates /master/templates/)"

#: lib/policy.py:1669
msgid "As long as a user has no token, he will only see a token wizard in the UI."
msgstr "Einem Benutzer ohne Token wird automatisch der Token Wizard angezeigt."

#: lib/policy.py:1674
msgid "The tokenwizard will be displayed in the token menu, even if the user already has a token."
msgstr "Der Token Wizard als Menüpunkt angeboten - auch wenn der Benutzer bereits einen Token hat."

#: lib/policy.py:1679
msgid "This is the default token type in the token enrollment dialog."
msgstr "Die Voreinstellung des Tokentyps im Rollout-Dialog."

#: lib/policy.py:1685
msgid "A comma separated list of realm names, which are displayed in a drop down menu in the WebUI login screen."
msgstr "Eine Liste an Realmnamen, die im WebUI-Login in einer Dropdown-Box angezeigt werden. Die Einträge der Liste sind durch Komma getrennt."

#: lib/policy.py:1691
msgid "If this checked, the administrator will not see the welcome dialog anymore."
msgstr "Dem Administrator wird der Willkommen-Dialog nicht mehr angezeigt."

#: lib/radiusserver.py:200
msgid "The RADIUS secret is too long"
msgstr "Das RADIUS Secret ist zu lang"

#: lib/token.py:2195
#, python-format
msgid "Admin is allowed to initalize %s tokens."
msgstr "Der Administrator kann %s Token ausrollen."

#: lib/token.py:2204
#, python-format
msgid "The user is allowed to enroll a %s token."
msgstr "Der Benutzer darf einen %s Token ausrollen."

#: lib/token.py:2235
msgid "Set the maximum allowed PIN length of the {0!s} token."
msgstr "Setze die maximal erlaubte PIN-Länge für den {0!s} Token."

#: lib/token.py:2242
msgid "Set the minimum required PIN length of the {0!s} token."
msgstr "Sete die minimal notwendite PIN-Länge für den {0!s} Token."

#: lib/token.py:2248
msgid "Specifiy the required PIN contents of the {0!s} token. (c)haracters, (n)umeric, (s)pecial, (o)thers. [+/-]!"
msgstr "Definiere den notwendigen Inhalte der OTP PIN für den {0!s} Token. (c) Buchstaben, (n) Ziffern, (s) Sonderzeichen, (o) Andere [+/-]!"

#: lib/eventhandler/base.py:113
msgid "The user realm, for which this event should apply."
msgstr "Benutzer-Realm, für den das Event greifen soll."

#: lib/eventhandler/base.py:118
msgid "The token realm, for which this event should apply."
msgstr "Token-Ream, für den das Event greifen soll."

#: lib/eventhandler/base.py:124
msgid "The type of the token."
msgstr "Der Tokentyp."

#: lib/eventhandler/base.py:129
msgid "The logged in user is of the following type."
msgstr "Der angemeldete Benutzer ist vom Typ"

#: lib/eventhandler/base.py:134
msgid "The result.value within the response is True or False."
msgstr "Das result.value in der Server-Antwort ist 'True' oder 'False'."

#: lib/eventhandler/base.py:140
msgid "Check if the max failcounter of the token is reached."
msgstr "Der maximale Fehlerzähler des Tokens wurde erreicht."

#: lib/eventhandler/base.py:146
msgid "The token has a user assigned."
msgstr "Der Token ist einem Benutzer zugewiesen."

#: lib/eventhandler/base.py:151
msgid "The token has a user assigned, but the user does not exist in the userstore anymore."
msgstr "Dem Token ist ein Benutzer zugewiesen, aber dieser Benutzer existiert nicht mehr in der Benutzerquelle."

#: lib/eventhandler/base.py:157
msgid "Check if the token is within its validity period."
msgstr "Überprüfe, ob der Token innerhalb des Gültigkeitszeitraums liegt."

#: lib/eventhandler/base.py:162
msgid "Action is triggered, if the serial matches this regular expression."
msgstr "Die Aktion wird ausgeführt, wenn die Seriennummer auf den regulären Ausdruck passt."

#: lib/eventhandler/base.py:167
msgid "Action is triggered, if the user has this number of tokens assigned."
msgstr "Die Aktion wird ausgeführt, wenn der Benutzer diese Anzahl an Tokens besitzt."

#: lib/eventhandler/base.py:172
msgid "Action is triggered, if the counter of the token equals this setting."
msgstr "Die Aktion wird ausgeführt, wenn der Token-Counter diesem Wert entspricht."

#: lib/eventhandler/base.py:177
msgid "Action is triggered, if the last authentication of the token is older than 7h, 10d or 1y."
msgstr "Die Aktion wird ausgeführt, wenn die letzte Authentisierung mit diesem Token länger als 7 Stunden, 10 Tage oder 1 Jahr (7h, 10d, 1y) zurückliegt."

#: lib/eventhandler/base.py:182
msgid "This can be '>100', '<99', or '=100', to trigger the action, if the tokeninfo field 'count_auth' is bigger than 100, less than 99 or exactly 100."
msgstr "Dies kann '>100', '<99' oder '=100' sein, um eine Aktion auszulösen. Das Feld 'count_auth' in Tokeninfo ist dann größer als 100, kleiner als 99 oder exakt 100."

#: lib/eventhandler/base.py:188
msgid "This can be '>100', '<99', or '=100', to trigger the action, if the tokeninfo field 'count_auth_success' is bigger than 100, less than 99 or exactly 100."
msgstr "Dies kann '>100', '<99' oder '=100' sein, um eine Aktion auszulösen. Das Feld 'count_auth_success' in Tokeninfo ist dann größer als 100, kleiner als 99 oder exakt 100."

#: lib/eventhandler/base.py:195
msgid "This can be '>100', '<99', or '=100', to trigger the action, if the difference between the tokeninfo field 'count_auth' and 'count_auth_success is bigger than 100, less than 99 or exactly 100."
msgstr "Dies kann '>100', '<99' oder '=100' sein, um eine Aktion auszulösen. Das Feld 'count_auth' und 'count_auth_success' in Tokeninfo ist dann größer als 100, kleiner als 99 oder exakt 100."

#: lib/eventhandler/base.py:202
msgid "This condition can check any arbitrary tokeninfo field. You need to enter something like '<fieldname> == <fieldvalue>', '<fieldname> > <fieldvalue>' or '<fieldname> < <fieldvalue>'"
msgstr "Diese Bedingung kann jedes beliebige Tokeninfo Feld überprüfen. Hier können Sie Ausdrücke wie '<Feldname> == <Feldwert>', '<Feldname> > <Feldwert>' oder '<Feldname> < <Feldwert>' eingeben."

#: lib/eventhandler/base.py:209
msgid "Here you can enter a regular expression. The condition only applies if the regular expression matches the detail->error->message in the response."
msgstr "Hier können Sie einen regulären Ausdruck eingeben. Die Bedingung greift nur, wenn der reguläre Ausdruck auf das Feld detail->error->message im HTTP Response passt."

#: lib/eventhandler/base.py:215
msgid "Here you can enter a regular expression. The condition only applies if the regular expression matches the detail->message in the response."
msgstr "Hier können Sie einen regulären Ausdruck eingeben. Die Bedingung greift nur, wenn der reguläre Ausdruck auf das Feld detail->message im HTTP Response passt."

#: lib/eventhandler/federationhandler.py:73
msgid "The remote/child privacyIDEA Server."
msgstr "Der entfernte privacyIDEA Server."

#: lib/eventhandler/federationhandler.py:78
msgid "Change the realm name to a realm on the child privacyIDEA system."
msgstr "Der Realmname wird auf diesen Realmnamen auf dem entfernenten privacyIDEA Server geändert."

#: lib/eventhandler/federationhandler.py:84
msgid "Change the resolver name to a resolver on the child privacyIDEA system."
msgstr "Der Resolvername wird auf diesen Resolvernamen auf dem entfernten privacyIDEA Server geändert."

#: lib/eventhandler/federationhandler.py:90
msgid "Forward the client IP to the child privacyIDEA server. Otherwise this server will be the client."
msgstr "Die Client-IP wird an den entfernten privacyIDEA Server durchgereicht. Ansonsten ist der lokale privacyIDEA Server der Client für den entfernten Server."

#: lib/eventhandler/federationhandler.py:97
msgid "Forward the authorization header. This allows to also forward request like token- and system-requests."
msgstr "Den HTML-Authorisierungsheader weiterleiten. So können bspw. auch Token- und System-Requests weitergeleitet werden."

#: lib/eventhandler/scripthandler.py:77
msgid "Add '--serial <serial number>' as script parameter."
msgstr "Nutze '--serial <serial number>' als Skript-Parameter."

#: lib/eventhandler/scripthandler.py:82
msgid "Add '--user <username>' as script parameter."
msgstr "Nutze '--user <username>' als Skript-Parameter."

#: lib/eventhandler/scripthandler.py:87
msgid "Add '--realm <realm>' as script parameter."
msgstr "Nutze '--realm <realm>' als Skript-Parameter."

#: lib/eventhandler/scripthandler.py:92
msgid "Add the username of the logged in user as script parameter like '--logged_in_user <username>'."
msgstr "Nutze den Benutzernamen des angemeldeten Benutzers als Skript-Parameter '--logged_in_user <username>'."

#: lib/eventhandler/scripthandler.py:98
msgid "Add the role (either admin or user) of the logged in user as script parameter like '--logged_in_role <role>'."
msgstr "Nutze die Rolle des angemeldeten Benutzers als Skript-Parameter '--logged_in_role <role>'."

#: lib/eventhandler/tokenhandler.py:108
msgid "set a new realm of the token"
msgstr "Setze einen neuen Token-Realm"

#: lib/eventhandler/tokenhandler.py:112
msgid "The new realm will be the only realm of the token. I.e. all other realms will be removed from this token. Otherwise the realm will be added to the token."
msgstr "Der neue Realm ist der einzige Realm des Tokens. D.h. alle anderen evtl. zugeordneten Realms dieses Tokens werden gelöscht. "

#: lib/eventhandler/tokenhandler.py:127
msgid "Token type to create"
msgstr "Tokentyp der angelegt werden soll"

#: lib/eventhandler/tokenhandler.py:132
msgid "Assign token to user in request or to tokenowner."
msgstr "Token dem Benutzer aus dem Request oder dem Tokenbesitzer zuweisen."

#: lib/eventhandler/tokenhandler.py:137
msgid "Set the realm of the newly created token."
msgstr "Realm des neu angelegten Tokens."

#: lib/eventhandler/tokenhandler.py:144
msgid "Set the MOTP PIN of the MOTP token during enrollment. This is a required value for enrolling MOTP tokens."
msgstr "Setze die MOTP PIN während des Rollout-Prozesses. MOTP Token benötigen eine MOTP PIN."

#: lib/eventhandler/tokenhandler.py:153
msgid "The new description of the token."
msgstr "Die neue Beschreibung des Tokens."

#: lib/eventhandler/tokenhandler.py:160
msgid "The token will be valid starting at the given date. Can be a fixed date or an offset like +10m, +24h, +7d."
msgstr "Der Token ist ab dem angegebenen Datum gültig. Dies kann ein fixes Datum oder eine Differenz wie +10m, +24h, +7d (10 Minuten, 24 Stunden, 7 Tage) sein."

#: lib/eventhandler/tokenhandler.py:167
msgid "The token will be valid until the given date. Can be a fixed date or an offset like +10m, +24h, +7d."
msgstr "Der Token wird bis zu dem angegebenem Datum gültig sein. Dies kann ein fixes Datum oder eine Differenz wie +10m, +24h, +7d sein (10 Minuten, 24 Stunden, 7 Tage)"

#: lib/eventhandler/tokenhandler.py:180
msgid "Set the new count window of the token."
msgstr "Das neue Zähler-Fenster des Tokens setzen."

#: lib/eventhandler/tokenhandler.py:190
msgid "Set the failcounter of the token."
msgstr "Setze den Fehlerzähler des Tokens."

#: lib/eventhandler/tokenhandler.py:199
msgid "Set this tokeninfo key."
msgstr "Setze diesen Schlüssel in der Tokeninfo-Tabelle."

#: lib/eventhandler/tokenhandler.py:204
msgid "Set the above key the this value."
msgstr "Setze der oben genannten Schlüssel auf diesen Wert."

#: lib/eventhandler/usernotification.py:105
msgid "Send notification email via this email server."
msgstr "Benachrichtigungs-EMaisl über diesen Email-Server versenden."

#: lib/eventhandler/usernotification.py:110
msgid "Either send email as plain text or HTML."
msgstr "Sende Email als Text oder HTML."

#: lib/eventhandler/usernotification.py:115
msgid "The subject of the mail that is sent."
msgstr "Die Betreffzeile der Email."

#: lib/eventhandler/usernotification.py:120
msgid "The Reply-To header in the sent email."
msgstr "Das Antworten-An Feld in der gesendeten EMail."

#: lib/eventhandler/usernotification.py:125
msgid "The body of the mail that is sent."
msgstr "Der Textkörper der EMail."

#: lib/eventhandler/usernotification.py:130
#: lib/eventhandler/usernotification.py:173
msgid "Send notification to this user."
msgstr "Benachrichtigung an diesen Benutzer senden."

#: lib/eventhandler/usernotification.py:153
msgid "Any email address, to which the notification should be sent."
msgstr "Eine EMail-Adresse, an die die Benachrichtigung gesendet werden soll."

#: lib/eventhandler/usernotification.py:162
msgid "Send the user notification via a predefined SMS gateway."
msgstr "Benutzerbenachrichtigung über dieses SMS-Gateway schicken."

#: lib/eventhandler/usernotification.py:169
msgid "The text of the SMS."
msgstr "Der Text der SMS."

#: lib/machines/ldap.py:338
#, python-format
msgid "Your LDAP config seems to be OK, %i machine objects found."
msgstr "Die LDAP-Konfiguration scheint in Ordnung zu sein. Es wurden %i Maschinen-Objekte gefunden."

#: lib/resolvers/LDAPIdResolver.py:859
#, python-format
msgid "Your LDAP config found %i user objects, but only %i with the specified uidtype"
msgstr "Es wurden %i Benutzerobjekte gefunden. Aber nur %i mit dem spezifizierten UID-Typ."

#: lib/resolvers/LDAPIdResolver.py:861
#, python-format
msgid "Your LDAP config seems to be OK, %i user objects found."
msgstr "Die LDAP-Konfiguration scheint in Ordnung zu sein. Es wurden %i Benutzer-Objekte gefunden."

#: lib/smsprovider/HttpSMSProvider.py:219
msgid "The base URL of the HTTP Gateway"
msgstr "Die Basis URL des HTTP Gateways"

#: lib/smsprovider/HttpSMSProvider.py:222
msgid "Should the HTTP Gateway be connected via an HTTP GET or POST request."
msgstr "Das Gateway wird mittels GET oder POST-Request angesprochen."

#: lib/smsprovider/HttpSMSProvider.py:227
msgid "Specify a substring, that indicates, that the SMS was delivered successfully."
msgstr "Ein Substring in der Antwort, der angibt, ob die SMS erfolgreich zugestellt wurde."

#: lib/smsprovider/HttpSMSProvider.py:231
msgid "Specify a substring, that indicates, that the SMS failed to be delivered."
msgstr "Ein Substring in der Antwort, der angibt, ob die SMS nicht zugestellt werden konnte."

#: lib/smsprovider/HttpSMSProvider.py:235
msgid "Username in case of basic authentication."
msgstr "Benutzername (Basic Authentication)"

#: lib/smsprovider/HttpSMSProvider.py:239
msgid "Password in case of basic authentication."
msgstr "Passwort (Basic Authentication)"

#: lib/smsprovider/HttpSMSProvider.py:243
msgid "Should the SSL certificate be verified."
msgstr "Das SSL-Zertifikat wird überprüft."

#: lib/smsprovider/HttpSMSProvider.py:247
msgid "An optional proxy string. DEPRECATED. Do not usethis anymore. Rather use HTTP_PROXY for http connections andHTTPS_PROXY for https connection. The PROXY option will beremoved in future."
msgstr "Optional Proxy. VERALTET. Diese Option wird in Zukunft (Version > 2.21) nicht mehr unterstützt werden."

#: lib/smsprovider/HttpSMSProvider.py:251
msgid "Proxy setting for HTTP connections."
msgstr "Proxy-Einstellung für HTTP-Verbindungen."

#: lib/smsprovider/HttpSMSProvider.py:252
msgid "Proxy setting for HTTPS connections."
msgstr "Proxy-Einstellung für HTTPS-Verbindungen."

#: lib/smsprovider/HttpSMSProvider.py:253
msgid "The timeout in seconds."
msgstr "Timeout in Sekunden."

#: lib/smsprovider/SmppSMSProvider.py:125
msgid "SMSC Host IP"
msgstr "SMSC IP Adresse"

#: lib/smsprovider/SmppSMSProvider.py:128
msgid "SMSC Port"
msgstr "SMSC Port"

#: lib/smsprovider/SmppSMSProvider.py:130
msgid "SMSC Service ID"
msgstr "Service ID, mit dem sich privacyIDEA beim SMSC meldet."

#: lib/smsprovider/SmppSMSProvider.py:132
msgid "Password for authentication on SMSC"
msgstr "Das Passwort, mit dem sich privacyIDEA am SMSC authentisiert."

#: lib/smsprovider/SmppSMSProvider.py:134
msgid "SOURCE_ADDR_TON Special Flag"
msgstr "Code des Nummerntyps des Senders. Wird vom SMSC Operator mitgeteilt."

#: lib/smsprovider/SmppSMSProvider.py:136
msgid "S_ADDR_NPI Special Flag"
msgstr "Code des Nummernplans des Senders. Wird vom SMSC Operator mitgeteilt."

#: lib/smsprovider/SmppSMSProvider.py:138
msgid "Source address (SMS sender)"
msgstr "Absender-Telefonnummer"

#: lib/smsprovider/SmppSMSProvider.py:139
msgid "DESTINATION_ADDR_TON Special Flag"
msgstr "Code des Nummertyps des Empfängers. Wird vom SMSC Operator mitgeteilt."

#: lib/smsprovider/SmppSMSProvider.py:140
msgid "D_ADDR_NPI Special Flag"
msgstr "Code des Nummernplans des Empfängers. Wird vom SMSC Operator mitgeteilt."

#: lib/tokens/certificatetoken.py:151
msgid "Certificate: Enroll an x509 Certificate Token."
msgstr "Certificate: Ein x509 Zertifikats-Token ausrollen."

#: lib/tokens/daplugtoken.py:113
msgid "event based OTP token using the HOTP algorithm"
msgstr "Ereignisbasiertes Einmalpasswort auf Basis des HOTP Algorithmus."

#: lib/tokens/emailtoken.py:134
msgid "EMail Token"
msgstr "EMail Token"

#: lib/tokens/emailtoken.py:136
msgid "EMail: Send a One Time Password to the users email address."
msgstr "EMail: Ein Einmalpasswort über Email an die Mail-Adresse des Benutzers versenden."

#: lib/tokens/emailtoken.py:144
msgid "The text that will be send via EMail for an EMail token. Use <otp> and <serial> as parameters."
msgstr "Der Textkörper der Email. Es können die Tags <otp> und <serial> verwendet werden."

#: lib/tokens/emailtoken.py:149
msgid "The subject of the EMail for an EMail token. Use <otp> and <serial> as parameters."
msgstr "Die Betreff-Zeile der Email. Es können die Tags <otp> und <serial> verwendet werden."

#: lib/tokens/emailtoken.py:154
msgid "If set, a new EMail OTP will be sent after successful authentication with one EMail OTP."
msgstr "Ein neues Einmalpasswort wird per Email versendet, direkt nachdem sich der Benutzer mit dem Einmalpasswort aus der letzten Email angemeldet hat."

#: lib/tokens/foureyestoken.py:123
msgid "4Eyes Token: Use tokens of two or more users to authenticate"
msgstr "Vier-Augen-Token: Zwei oder mehr Personen müssen zusammenkommen, damit sich ein Account anmelden kann."

#: lib/tokens/hotptoken.py:112
msgid "Specify the hashlib to be used. Can be sha1 (1) or sha2-256 (2)."
msgstr "Der zu verwendende Hash-Algorithmus. SHA1 (1) oder SHA2-256 (2)."

#: lib/tokens/hotptoken.py:114
msgid "Specify the otplen to be used. Can be 6 or 8 digits."
msgstr "Die OTP-Länge. Entweder 6 oder 8 Zeichen."

#: lib/tokens/hotptoken.py:115 lib/tokens/totptoken.py:140
msgid "Specify whether users are allowed or forced to use two-step enrollment."
msgstr "Benutzer dürfen oder müssen den Zwei-Schritt-Rollout verwenden."

#: lib/tokens/hotptoken.py:117 lib/tokens/totptoken.py:146
msgid "Specify whether admins are allowed or forced to use two-step enrollment."
msgstr "Administratoren dürfen oder müssen den Zwei-Schritt-Rollout verwenden."

#: lib/tokens/hotptoken.py:121
msgid "HOTP: Event based One Time Passwords."
msgstr "HOTP: Ereignisbasiertes Einmalpasswort."

#: lib/tokens/hotptoken.py:129
msgid "The Yubikey access code used to initialize Yubikeys."
msgstr "Yubikey Access Code, der benötigt wird, um Yubikeys zu initialisieren."

#: lib/tokens/hotptoken.py:133 lib/tokens/totptoken.py:152
msgid "The size of the OTP seed part contributed by the client (in bytes)"
msgstr "Die Größe des Smartphone-Anteils (in Byte)"

#: lib/tokens/hotptoken.py:137 lib/tokens/totptoken.py:155
msgid "The size of the OTP seed part contributed by the server (in bytes)"
msgstr "Die Große des Server-Anteils (in Byte)"

#: lib/tokens/hotptoken.py:141 lib/tokens/totptoken.py:158
msgid "The difficulty factor used for the OTP seed generation (should be at least 10000)"
msgstr "Die Schweregrad zur Generierung des OTP Seeds. (Sollte wenigstens 10000 sein)"

#: lib/tokens/hotptoken.py:155 lib/tokens/totptoken.py:135
msgid "Force the key to be generated on the server."
msgstr "Den Key auf dem Server generieren."

#: lib/tokens/hotptoken.py:229
msgid "URL for google Authenticator"
msgstr "URL für Google Authenticator und vergleichbare Apps"

#: lib/tokens/hotptoken.py:243
msgid "URL for OATH token"
msgstr "URL für OATH Token"

#: lib/tokens/motptoken.py:139
msgid "URL for MOTP token"
msgstr "URL für MOTP Token"

#: lib/tokens/ocratoken.py:94
msgid "OCRA: Enroll an OCRA token."
msgstr "OCRA: Einen OCRA-Token ausrollen."

#: lib/tokens/papertoken.py:108
msgid "The number of OTP values, which are printed on the paper."
msgstr "Anzahl der gedruckten OTP-Werte."

#: lib/tokens/passwordtoken.py:90
msgid "A token with a fixed password. Can be combined  with the OTP PIN. Is used for the lost token scenario."
msgstr "Ein Token mit einem festen Passwort. Dieses kann mit der OTP PIN verwendet werden. Wir im Workflow \"Verlorener Token\" verwendet."

#: lib/tokens/questionnairetoken.py:89
msgid "Questionnaire: Enroll Questions for the user."
msgstr "Fragenkatalog: Einen Fragenkatalog-Token ausrollen."

#: lib/tokens/questionnairetoken.py:136
#, python-format
msgid "You need to provide at least %s answers."
msgstr "Sie müssen wenigstens %s Antworten angeben."

#: lib/tokens/radiustoken.py:97
msgid "RADIUS: Forward authentication request to a RADIUS server."
msgstr "RADIUS: Die Authentifizierungsanfrage an einen RADIUS-Server weiterleiten."

#: lib/tokens/registrationtoken.py:120
msgid "Registration: A token that creates a registration code that can be used as a second factor once."
msgstr "Registrierung: Ein Token, der einen Registrierungs-Code erzeugt, den der Benutzer einmal verwenden kann."

#: lib/tokens/remotetoken.py:109
msgid "Remote Token: Forward authentication request to another server."
msgstr "Remote Token: Die Authentifizierungsanfrage an einen anderen privacyIDEA Server weiterleiten."

#: lib/tokens/smstoken.py:185
msgid "SMS Token"
msgstr "SMS Token"

#: lib/tokens/smstoken.py:187
msgid "SMS: Send a One Time Password to the users mobile phone."
msgstr "SMS: Ein Einmalpasswort per SMS an das Mobiltelefon des Benutzers senden."

#: lib/tokens/smstoken.py:196
msgid "The text that will be send via SMS for an SMS token. Use <otp> and <serial> as parameters."
msgstr "Der Text der SMS. <otp> und <serial> können als Tags verwendet werden."

#: lib/tokens/smstoken.py:201
msgid "If set, a new SMS OTP will be sent after successful authentication with one SMS OTP."
msgstr "Ein neues Einmalpasswort wird direkt gesendet, nachdem sich der Benutzer erfolgreich mit dem bisherigen Einmalpasswort aus der letzten SMS authentisiert hat."

#: lib/tokens/spasstoken.py:87
msgid "SPass: Simple Pass token. Static passwords."
msgstr "SPass: Simple Pass Token. Der zweite Faktor entfällt. Authentisierung nur mit OTP PIN."

#: lib/tokens/sshkeytoken.py:84
msgid "SSH Public Key: The public SSH key."
msgstr "SSH Public Key: Der öffentliche SSH-Schlüssel."

#: lib/tokens/tiqrtoken.py:151
msgid "TiQR: Enroll a TiQR token."
msgstr "TiQR: Einen TiQR-Token ausrollen."

#: lib/tokens/tiqrtoken.py:219
msgid "URL for TiQR enrollment"
msgstr "URL zum Ausrollen des TiQR Token"

#: lib/tokens/totptoken.py:114
msgid "TOTP: Time based One Time Passwords."
msgstr "TOTP: Zeitbasiertes Einmalpasswort."

#: lib/tokens/u2ftoken.py:243
msgid "This is a list of FQDN hostnames trusting the registered U2F tokens."
msgstr "Die Liste der FQDNs, bei denen der registrierte U2F-Token verwendet werden kann."

#: lib/tokens/u2ftoken.py:249
msgid "Only specified U2F tokens are authorized."
msgstr "Nur die angegebenen U2F Geräten sind für die Anmeldung autorisiert."

#: lib/tokens/u2ftoken.py:256
msgid "Only specified U2F tokens are allowed to be registered."
msgstr "Nur die angegebenen U2F Geräte dürfen registriert werden."

#: lib/tokens/u2ftoken.py:331
msgid "You need to define the appId in the token config!"
msgstr "Sie müssen in der Token-Konfiguration die AppId definieren!"

#: lib/tokens/yubicotoken.py:97
msgid "Yubikey Cloud mode: Forward authentication request to YubiCloud."
msgstr "Yubikey Cloud Modus: Die Authentifizierungsanfrage wird an die YubiCloud weitergeleitet."

#: lib/tokens/yubikeytoken.py:159
msgid "Yubikey AES mode: One Time Passwords with Yubikey."
msgstr "Yubikey AES Mode: Einmalpasswort mit dem Yubikey."

#~ msgid "tools"
#~ msgstr "Tools"

#~ msgid "system"
#~ msgstr "System"

#~ msgid "token"
#~ msgstr "Token"

#~ msgid "enrollment"
#~ msgstr "Ausrollen"

#~ msgid "general"
#~ msgstr "Allgemein"

#~ msgid ""
#~ msgstr ""

#~ msgid ""
#~ "The user will only be authenticated "
#~ "if the tokeninfo field matches the "
#~ "regexp. key=/<regexp>/"
#~ msgstr ""
