# Translations template for PROJECT.
# Copyright (C) 2020 ORGANIZATION
# This file is distributed under the same license as the PROJECT project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: PROJECT VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2020-12-14 12:00+0100\n"
"PO-Revision-Date: 2021-03-02 10:50+0000\n"
"Last-Translator: HelaBasa <R45XvezA@protonmail.ch>\n"
"Language-Team: Sinhala <https://hosted.weblate.org/projects/privacyidea/"
"privacyidea-ui/si/>\n"
"Language: si\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"X-Generator: Weblate 4.5\n"
"Generated-By: Babel 2.4.0\n"

#: api/auth.py:220
msgid "Authentication failure. Unknown realm: {0!s}."
msgstr ""

#: api/auth.py:224
msgid "Authentication failure. Missing Username"
msgstr ""

#: api/auth.py:332
msgid "Authentication failure. Wrong credentials"
msgstr ""

#: api/lib/utils.py:289
msgid "Authentication failure. Missing Authorization header."
msgstr ""

#: api/lib/utils.py:317 api/lib/utils.py:327
msgid "Authentication failure. Your token has expired: {0!s}"
msgstr ""

#: api/lib/utils.py:324
msgid "Authentication failure. Error during decoding your token: {0!s}"
msgstr ""

#: api/lib/utils.py:331
msgid ""
"Authentication failure. The username {0!s} is not allowed to impersonate "
"via JWT."
msgstr ""

#: api/lib/utils.py:335
msgid ""
"Authentication failure. You do not have the necessary role ({0!s}) to "
"access this resource!"
msgstr ""

#: api/lib/utils.py:353
msgid "'{0!s}' is an invalid policy name."
msgstr ""

#: api/lib/utils.py:356
msgid "The name of the policy may only contain the characters a-zA-Z0-9_. -"
msgstr ""

#: lib/challengeresponsedecorators.py:146
msgid "Please enter the new PIN again"
msgstr ""

#: lib/challengeresponsedecorators.py:160
msgid "Please enter a new PIN"
msgstr ""

#: lib/decorators.py:43 lib/token.py:2177
msgid "This action is not possible, since the token is locked"
msgstr ""

#: lib/decorators.py:94
msgid "You need to specify a serial or a user."
msgstr ""

#: lib/decorators.py:96
msgid "Invalid serial number."
msgstr ""

#: lib/decorators.py:98
msgid "Invalid user."
msgstr "වලංගු නොවන පරිශීලකයෙකි."

#: lib/error.py:170
msgid "You either need to provide user or serial"
msgstr ""

#: lib/policy.py:1376
msgid "Define in which resolver the user should be registered."
msgstr ""

#: lib/policy.py:1380
msgid "Define in which realm the user should be registered."
msgstr ""

#: lib/policy.py:1384
msgid ""
"The SMTP server configuration, that should be used to send the "
"registration email."
msgstr ""

#: lib/policy.py:1388
msgid ""
"Only users with this email address are allowed to register. This is a "
"regular expression."
msgstr ""

#: lib/policy.py:1393
msgid ""
"The body of the registration email. Use '{regkey}' as tag for the "
"registration key."
msgstr ""

#: lib/policy.py:1399
msgid "Admin is allowed to enable tokens."
msgstr ""

#: lib/policy.py:1403
msgid "Admin is allowed to disable tokens."
msgstr ""

#: lib/policy.py:1407
msgid "Admin is allowed to set token properties."
msgstr ""

#: lib/policy.py:1412
msgid "Admin is allowed to set the OTP PIN of tokens."
msgstr ""

#: lib/policy.py:1418
msgid "Admin is allowed to set a random OTP PIN of tokens."
msgstr ""

#: lib/policy.py:1422
msgid "Admin is allowed to manually set and delete token info."
msgstr ""

#: lib/policy.py:1426
msgid "Admin is allowed to set the OTP PIN during enrollment."
msgstr ""

#: lib/policy.py:1431
msgid "Admin is allowed to resync tokens."
msgstr ""

#: lib/policy.py:1435
msgid "Admin is allowed to reset the Failcounter of a token."
msgstr ""

#: lib/policy.py:1441
msgid "Admin is allowed to revoke a token"
msgstr ""

#: lib/policy.py:1445
msgid "Admin is allowed to assign a token to a user."
msgstr ""

#: lib/policy.py:1451
msgid "Admin is allowed to remove the token from a user, i.e. unassign a token."
msgstr ""

#: lib/policy.py:1458
msgid "Admin is allowed to import token files."
msgstr ""

#: lib/policy.py:1463
msgid "Admin is allowed to remove tokens from the database."
msgstr ""

#: lib/policy.py:1469
msgid "Admin is allowed to view the list of the users."
msgstr ""

#: lib/policy.py:1475
msgid "The Admin is allowed to list the machines."
msgstr ""

#: lib/policy.py:1480
msgid "The Admin is allowed to attach and detach tokens to machines."
msgstr ""

#: lib/policy.py:1487
msgid ""
"The Admin is allowed to fetch authentication items of tokens assigned to "
"machines."
msgstr ""

#: lib/policy.py:1492
msgid "Admin is allowed to manage the realms of a token."
msgstr ""

#: lib/policy.py:1497
msgid "Admin is allowed to list tokens."
msgstr ""

#: lib/policy.py:1501
msgid "Admin is allowed to retrieve a serial for a given OTP value."
msgstr ""

#: lib/policy.py:1506
msgid "Admin is allowed to retrieve random keys from privacyIDEA."
msgstr ""

#: lib/policy.py:1510
msgid "Admin is allowed to copy the PIN of one token to another token."
msgstr ""

#: lib/policy.py:1516
msgid ""
"Admin is allowed to copy the assigned user to another token, i.e. assign "
"a user ot another token."
msgstr ""

#: lib/policy.py:1523
msgid "Admin is allowed to trigger the lost token workflow."
msgstr ""

#: lib/policy.py:1529
msgid "Admin is allowed to write and modify the system configuration."
msgstr ""

#: lib/policy.py:1534
msgid "Admin is allowed to delete keys in the system configuration."
msgstr ""

#: lib/policy.py:1540
msgid "Admin is allowed to read basic system configuration."
msgstr ""

#: lib/policy.py:1545
msgid ""
"Admin is allowed to export a documentation of the complete configuration "
"including resolvers and realm."
msgstr ""

#: lib/policy.py:1553
msgid "Admin is allowed to write and modify the policies."
msgstr ""

#: lib/policy.py:1558
msgid "Admin is allowed to delete policies."
msgstr ""

#: lib/policy.py:1563
msgid "Admin is allowed to read policies."
msgstr ""

#: lib/policy.py:1567
msgid "Admin is allowed to write and modify the resolver and realm configuration."
msgstr ""

#: lib/policy.py:1574
msgid "Admin is allowed to delete resolvers and realms."
msgstr ""

#: lib/policy.py:1579
msgid "Admin is allowed to read resolvers."
msgstr ""

#: lib/policy.py:1583
msgid ""
"Admin is allowed to create new CA Connector definitions and modify "
"existing ones."
msgstr ""

#: lib/policy.py:1589
msgid "Admin is allowed to delete CA Connector definitions."
msgstr ""

#: lib/policy.py:1594
msgid "Admin is allowed to read CA Connector definitions."
msgstr ""

#: lib/policy.py:1599
msgid "Admin is allowed to write and modify the machine resolvers."
msgstr ""

#: lib/policy.py:1605
msgid "Admin is allowed to delete machine resolvers."
msgstr ""

#: lib/policy.py:1611
msgid "Admin is allowed to read machine resolvers."
msgstr ""

#: lib/policy.py:1618 lib/policy.py:1845
msgid "Set the maximum allowed length of the OTP PIN."
msgstr ""

#: lib/policy.py:1623 lib/policy.py:1850
msgid "Set the minimum required length of the OTP PIN."
msgstr ""

#: lib/policy.py:1627 lib/policy.py:1854
msgid ""
"Specifiy the required contents of the OTP PIN. (c)haracters, (n)umeric, "
"(s)pecial. Use modifiers +/- or a list of allowed characters [1234567890]"
msgstr ""

#: lib/policy.py:1636
msgid "The length of a random PIN set by the administrator."
msgstr ""

#: lib/policy.py:1639
msgid "Admin is allowed to view the Audit log."
msgstr ""

#: lib/policy.py:1643
msgid "The admin will only see audit entries of the last 10d, 3m or 2y."
msgstr ""

#: lib/policy.py:1648
msgid "The admin will not see the specified columns in the audit."
msgstr ""

#: lib/policy.py:1653
msgid "The admin is allowed to download the complete auditlog."
msgstr ""

#: lib/policy.py:1658
msgid "Admin is allowed to add users in a userstore/UserIdResolver."
msgstr ""

#: lib/policy.py:1663
msgid "Admin is allowed to update the users data in a userstore."
msgstr ""

#: lib/policy.py:1668
msgid "Admin is allowed to delete a user object in a userstore."
msgstr ""

#: lib/policy.py:1673
msgid "Admin is allowed to set the password of the HSM/Security Module."
msgstr ""

#: lib/policy.py:1677
msgid "Admin is allowed to retrieve the list of active challenges."
msgstr ""

#: lib/policy.py:1683
msgid "Admin is allowed to write new SMTP server definitions."
msgstr ""

#: lib/policy.py:1688
msgid "Admin is allowed to read SMTP server definitions."
msgstr ""

#: lib/policy.py:1693
msgid "Admin is allowed to write new RADIUS server definitions."
msgstr ""

#: lib/policy.py:1699
msgid "Admin is allowed to read RADIUS server definitions."
msgstr ""

#: lib/policy.py:1704
msgid "Admin is allowed to write remote privacyIDEA server definitions."
msgstr ""

#: lib/policy.py:1711
msgid "Admin is allowed to read remote privacyIDEA server definitions."
msgstr ""

#: lib/policy.py:1718
msgid "Admin is allowed to write periodic task definitions."
msgstr ""

#: lib/policy.py:1723
msgid "Admin is allowed to read periodic task definitions."
msgstr ""

#: lib/policy.py:1728
msgid "Admin is allowed to read statistics data."
msgstr ""

#: lib/policy.py:1731
msgid "Admin is allowed to delete statistics data."
msgstr ""

#: lib/policy.py:1734
msgid "Admin is allowed to write and modify the event handling configuration."
msgstr ""

#: lib/policy.py:1740
msgid "Admin is allowed to read event handling configuration."
msgstr ""

#: lib/policy.py:1745
msgid "Admin is allowed to write and modify SMS gateway definitions."
msgstr ""

#: lib/policy.py:1751
msgid "Admin is allowed to read SMS gateway definitions."
msgstr ""

#: lib/policy.py:1756
msgid "Admin is allowed to get the list of authenticated clients and their types."
msgstr ""

#: lib/policy.py:1763
msgid "Admin is allowed to add and delete component subscriptions."
msgstr ""

#: lib/policy.py:1769
msgid "The Admin is allowed to trigger a challenge for e.g. SMS OTP token."
msgstr ""

#: lib/policy.py:1779
msgid ""
"The user is allowed to assign an existing token that is not yet assigned "
"using the token serial number."
msgstr ""

#: lib/policy.py:1785
msgid "The user is allowed to disable his own tokens."
msgstr ""

#: lib/policy.py:1791
msgid "The user is allowed to enable his own tokens."
msgstr ""

#: lib/policy.py:1797
msgid "The user is allowed to delete his own tokens."
msgstr ""

#: lib/policy.py:1803
msgid "The user is allowed to unassign his own tokens."
msgstr ""

#: lib/policy.py:1808
msgid "The user is allowed to resyncronize his tokens."
msgstr ""

#: lib/policy.py:1813
msgid "The user is allowed to revoke a token"
msgstr ""

#: lib/policy.py:1818
msgid "The user is allowed to reset the failcounter of his tokens."
msgstr ""

#: lib/policy.py:1823
msgid "The user is allowed to set the OTP PIN of his tokens."
msgstr ""

#: lib/policy.py:1828
msgid "The user is allowed to set a random OTP PIN of his tokens."
msgstr ""

#: lib/policy.py:1833
msgid "The length of a random PIN set by the user."
msgstr ""

#: lib/policy.py:1836
msgid "The user is allowed to set the token description."
msgstr ""

#: lib/policy.py:1840
msgid "The user is allowed to set the OTP PIN during enrollment."
msgstr ""

#: lib/policy.py:1863
msgid "Allow the user to view his own token history."
msgstr ""

#: lib/policy.py:1866
msgid "The user will only see audit entries of the last 10d, 3m or 2y."
msgstr ""

#: lib/policy.py:1870
msgid "The user will not see the specified columns in the audit."
msgstr ""

#: lib/policy.py:1875
msgid "The user is allowed to view his own user information."
msgstr ""

#: lib/policy.py:1879
msgid ""
"The user is allowed to update his own user information, like changing his"
" password."
msgstr ""

#: lib/policy.py:1884
msgid "The user is allowed to do a password reset in an editable UserIdResolver."
msgstr ""

#: lib/policy.py:1893
msgid "Limit the number of allowed tokens in a realm."
msgstr ""

#: lib/policy.py:1897
msgid "Limit the number of tokens a user may have assigned."
msgstr ""

#: lib/policy.py:1902
msgid "Limit the number of active tokens a user may have assigned."
msgstr ""

#: lib/policy.py:1907
msgid ""
"Set a random OTP PIN with this length for a token during the enrollment "
"process."
msgstr ""

#: lib/policy.py:1912
msgid "In case of a random OTP PIN use this python module to process the PIN."
msgstr ""

#: lib/policy.py:1917
msgid ""
"If the administrator sets the OTP PIN during enrollment or later, the "
"user will have to change the PIN during first use."
msgstr ""

#: lib/policy.py:1924
msgid ""
"The user needs to change his PIN on a regular basis. To change the PIN "
"every 180 days, enter '180d'."
msgstr ""

#: lib/policy.py:1931
msgid ""
"The OTP PIN can be hashed or encrypted. Hashing the PIN is the default "
"behaviour."
msgstr ""

#: lib/policy.py:1936
msgid ""
"Set label for a new enrolled Google Authenticator. Possible tags are <u> "
"(user), <r> (realm), <s> (serial)."
msgstr ""

#: lib/policy.py:1942
msgid "This is the issuer label for new enrolled Google Authenticators."
msgstr ""

#: lib/policy.py:1948
msgid "This is the URL to the token image for smartphone apps like FreeOTP."
msgstr ""

#: lib/policy.py:1955
msgid ""
"Users can assign a token just by using the unassigned token to "
"authenticate."
msgstr ""

#: lib/policy.py:1961
msgid "The length of the password in case of temporary token (lost token)."
msgstr ""

#: lib/policy.py:1965
msgid ""
"The contents of the temporary password, described by the characters C, c,"
" n, s, 8."
msgstr ""

#: lib/policy.py:1970
msgid "The length of the validity for the temporary token (in days)."
msgstr ""

#: lib/policy.py:1975
msgid "Set the length of registration codes."
msgstr ""

#: lib/policy.py:1979
msgid ""
"Specify the required contents of the registration code. (c)haracters, "
"(n)umeric, (s)pecial. Use modifiers +/- or a list of allowed characters "
"[1234567890]"
msgstr ""

#: lib/policy.py:1992
msgid ""
"Either use the Token PIN , use the Userstore Password or use no fixed "
"password component."
msgstr ""

#: lib/policy.py:1997
msgid ""
"This is a whitespace separated list of tokentypes, that can be used with "
"challenge response."
msgstr ""

#: lib/policy.py:2002
msgid ""
"Use an alternate challenge text for telling the user to enter an OTP "
"value."
msgstr ""

#: lib/policy.py:2007
msgid ""
"If there are several different challenges, this text precedes the list of"
" the challenge texts."
msgstr ""

#: lib/policy.py:2012
msgid ""
"If there are several different challenges, this text follows the list of "
"the challenge texts."
msgstr ""

#: lib/policy.py:2017
msgid ""
"If the PIN of a token is to be changed, this will allow the user to "
"change the PIN during a validate/check request via challenge / response."
msgstr ""

#: lib/policy.py:2023
msgid ""
"If set, the user in this realm will be authenticated against the "
"userstore or against the given RADIUS config, if the user has no tokens "
"assigned."
msgstr ""

#: lib/policy.py:2030
msgid ""
"This allows to automatically assign a Token within privacyIDEA, if the "
"user was authenticated via passthru against a RADIUS server. The OTP "
"value is used to find the unassigned token in privacyIDEA. Enter the "
"length of the OTP value and where the PIN is set like 8:pin or pin:6."
msgstr ""

#: lib/policy.py:2037
msgid ""
"If the user has no token, the authentication request for this user will "
"always be true."
msgstr ""

#: lib/policy.py:2042
msgid ""
"If the user user does not exist, the authentication request for this non-"
"existing user will always be true."
msgstr ""

#: lib/policy.py:2048
msgid ""
"Can be used to modify the parameters pass, user and realm in an "
"authentication request. See the documentation for an example."
msgstr ""

#: lib/policy.py:2054
msgid ""
"If a user authenticates successfully reset the failcounter of all of his "
"tokens."
msgstr ""

#: lib/policy.py:2059
msgid ""
"Cache the password used for authentication and allow authentication with "
"the same credentials for a certain amount of time. Specify timeout like "
"4h or 4h/5m."
msgstr ""

#: lib/policy.py:2068
msgid ""
"Allow the user to authenticate (default). If set to '{0!s}', the "
"authentication of the user will be denied."
msgstr ""

#: lib/policy.py:2075
msgid ""
"Allow the application to choose which token types should be used for "
"authentication. Application may set the parameter 'type' in the request. "
"Works with validate/check, validate/samlcheck and "
"validate/triggerchallenge."
msgstr ""

#: lib/policy.py:2082
msgid ""
"You can specify how many successful authentication requests a user is "
"allowed to do in a given time. Specify like 1/5s, 2/10m, 10/1h - s, m, h "
"being second, minute and hour."
msgstr ""

#: lib/policy.py:2090
msgid ""
"You can specify how many failed authentication requests a user is allowed"
" to do in a given time. Specify like 1/5s, 2/10m, 10/1h - s, m, h being "
"second, minute and hour."
msgstr ""

#: lib/policy.py:2098
msgid ""
"You can specify in which time frame the user needs to authenticate again "
"with this token. If the user authenticates later, authentication will "
"fail. Specify like 30h, 7d or 1y."
msgstr ""

#: lib/policy.py:2106
msgid "The user will only be authenticated with this very tokentype."
msgstr ""

#: lib/policy.py:2113
msgid ""
"The user will only be authenticated if the serial number of the token "
"matches this regexp."
msgstr ""

#: lib/policy.py:2119
msgid ""
"The user will only be authenticated if the tokeninfo field matches the "
"regexp. key/<regexp>/"
msgstr ""

#: lib/policy.py:2126
msgid ""
"The Realm of the user is set to this very realm. This is important if the"
" user is not contained in the default realm and can not pass his realm."
msgstr ""

#: lib/policy.py:2133
msgid ""
"In case of successful authentication additional no detail information "
"will be returned."
msgstr ""

#: lib/policy.py:2139
msgid ""
"In case of failed authentication additional no detail information will be"
" returned."
msgstr ""

#: lib/policy.py:2145
msgid ""
"In case of successful authentication user data will be added in the "
"detail branch of the authentication response."
msgstr ""

#: lib/policy.py:2152
msgid ""
"In case of successful authentication the user resolver and realm will be "
"added in the detail branch of the authentication response."
msgstr ""

#: lib/policy.py:2159
msgid ""
"The sending of an API Auth Key is required duringauthentication. This "
"avoids rogue authenticate requests against the /validate/check interface."
msgstr ""

#: lib/policy.py:2169
msgid ""
"If set, administrators will see a dashboard as start screen when logging "
"in to privacyIDEA WebUI."
msgstr ""

#: lib/policy.py:2174
msgid ""
"If set to \"privacyIDEA\" the users and admins need to authenticate "
"against privacyIDEA when they log in to the Web UI. Defaults to "
"\"userstore\"."
msgstr ""

#: lib/policy.py:2183
msgid ""
"An alternative text to display on the WebUI login dialog instead of "
"\"Please sign in\"."
msgstr ""

#: lib/policy.py:2187
msgid ""
"When searching in the user list, the search will only performed when "
"pressing enter."
msgstr ""

#: lib/policy.py:2192
msgid ""
"The action taken when a user is idle beyond the logout_time limit. "
"Defaults to \"lockscreen\"."
msgstr ""

#: lib/policy.py:2200
msgid ""
"The REMOTE_USER set by the webserver can be used to login to privacyIDEA "
"or it will be ignored. Defaults to \"disable\"."
msgstr ""

#: lib/policy.py:2206
msgid ""
"Set the time in seconds after which the user will be logged out from the "
"WebUI. Default: 120"
msgstr ""

#: lib/policy.py:2211
msgid "Set how many tokens should be displayed in the token view on one page."
msgstr ""

#: lib/policy.py:2216
msgid "Set how many users should be displayed in the user view on one page."
msgstr ""

#: lib/policy.py:2221
msgid "Use your own html template for the web UI menu."
msgstr ""

#: lib/policy.py:2225
msgid "Use your own html template for the web UI baseline/footer."
msgstr ""

#: lib/policy.py:2229
msgid "Link your privacy statement to be displayed in the baseline/footer."
msgstr ""

#: lib/policy.py:2233
msgid ""
"Whether the user ID and the resolver should be displayed in the token "
"list."
msgstr ""

#: lib/policy.py:2238
msgid ""
"The URL of a repository, where the policy templates can be found.  "
"(Default https: //raw.githubusercontent.com/ privacyidea/policy-templates"
" /master/templates/)"
msgstr ""

#: lib/policy.py:2245
msgid "As long as a user has no token, he will only see a token wizard in the UI."
msgstr ""

#: lib/policy.py:2250
msgid ""
"The tokenwizard will be displayed in the token menu, even if the user "
"already has a token."
msgstr ""

#: lib/policy.py:2255
msgid "The welcome dialog will be displayed if the user has no tokens assigned."
msgstr ""

#: lib/policy.py:2259
msgid "This is the default token type in the token enrollment dialog."
msgstr ""

#: lib/policy.py:2265
msgid ""
"A list of realm names, which are displayed in a drop down menu in the "
"WebUI login screen. Realms are separated by white spaces."
msgstr ""

#: lib/policy.py:2271
msgid ""
"If this checked, the administrator will not see the welcome dialog "
"anymore."
msgstr ""

#: lib/policy.py:2276
msgid ""
"Per default disabled actions result in disabled buttons. When checking "
"this action, buttons of disabled actions are hidden."
msgstr ""

#: lib/policy.py:2281
msgid "If this is checked, the seed will be displayed as text during enrollment."
msgstr ""

#: lib/policy.py:2286
msgid ""
"If this is checked, the privacyIDEA Node name will be displayed in the "
"menu bar."
msgstr ""

#: lib/policy.py:2291
msgid ""
"If this is checked, the enrollment page for HOTP, TOTP and Push tokens "
"will contain a QR code that leads to the privacyIDEA Authenticator in the"
" Google Play Store."
msgstr ""

#: lib/policy.py:2298
msgid ""
"If this is checked, the enrollment page for HOTP, TOTP and Push tokens "
"will contain a QR code that leads to the privacyIDEA Authenticator in the"
" iOS App Store."
msgstr ""

#: lib/policy.py:2305
msgid ""
"This action adds a QR code in the enrollment page for HOTP, TOTP and Push"
" tokens, that lead to this given URL."
msgstr ""

#: lib/policy.py:2350
msgid ""
"The policy only matches if certain conditions on the user info are "
"fulfilled."
msgstr ""

#: lib/policy.py:2353
msgid ""
"The policy only matches if certain conditions on the HTTP Request header "
"are fulfilled."
msgstr ""

#: lib/radiusserver.py:204 lib/radiusserver.py:236
msgid "The RADIUS secret is too long"
msgstr ""

#: lib/token.py:2434
msgid "Admin is allowed to initalize {0!s} tokens."
msgstr ""

#: lib/token.py:2442
msgid "The user is allowed to enroll a {0!s} token."
msgstr ""

#: lib/token.py:2473
msgid "Set the maximum allowed PIN length of the {0!s} token."
msgstr ""

#: lib/token.py:2480
msgid "Set the minimum required PIN length of the {0!s} token."
msgstr ""

#: lib/token.py:2486
msgid ""
"Specifiy the required PIN contents of the {0!s} token. (c)haracters, "
"(n)umeric, (s)pecial, (o)thers. [+/-]!"
msgstr ""

#: lib/tokenclass.py:1553
msgid "please enter otp: "
msgstr ""

#: lib/eventhandler/base.py:146
msgid ""
"The rollout_state of the token has a certain value like 'clientwait' or "
"'enrolled'."
msgstr ""

#: lib/eventhandler/base.py:151
msgid "The realm of the user, for which this event should apply."
msgstr ""

#: lib/eventhandler/base.py:157
msgid "The resolver of the user, for which this event should apply."
msgstr ""

#: lib/eventhandler/base.py:163
msgid "The realm of the token, for which this event should apply."
msgstr ""

#: lib/eventhandler/base.py:170
msgid "The resolver of the token, for which this event should apply."
msgstr ""

#: lib/eventhandler/base.py:177
msgid "The type of the token."
msgstr ""

#: lib/eventhandler/base.py:183
msgid "The logged in user is of the following type."
msgstr ""

#: lib/eventhandler/base.py:189
msgid "The result.value within the response is True or False."
msgstr ""

#: lib/eventhandler/base.py:196
msgid "The result.status within the response is True or False."
msgstr ""

#: lib/eventhandler/base.py:203
msgid "Check if the max failcounter of the token is reached."
msgstr ""

#: lib/eventhandler/base.py:210
msgid "The token has a user assigned."
msgstr ""

#: lib/eventhandler/base.py:216
msgid ""
"The token has a user assigned, but the user does not exist in the "
"userstore anymore."
msgstr ""

#: lib/eventhandler/base.py:223
msgid "Check if the token is within its validity period."
msgstr ""

#: lib/eventhandler/base.py:229
msgid "Action is triggered, if the serial matches this regular expression."
msgstr ""

#: lib/eventhandler/base.py:235
msgid "Action is triggered, if the user has this number of tokens assigned."
msgstr ""

#: lib/eventhandler/base.py:241
msgid ""
"Action is triggered, if the counter of the token equals this setting. Can"
" also be '>100' or '<99' for no exact match."
msgstr ""

#: lib/eventhandler/base.py:248
msgid ""
"Action is triggered, if the last authentication of the token is older "
"than 7h, 10d or 1y."
msgstr ""

#: lib/eventhandler/base.py:254
msgid ""
"This can be '>100', '<99', or '=100', to trigger the action, if the "
"tokeninfo field 'count_auth' is bigger than 100, less than 99 or exactly "
"100."
msgstr ""

#: lib/eventhandler/base.py:261
msgid ""
"This can be '>100', '<99', or '=100', to trigger the action, if the "
"tokeninfo field 'count_auth_success' is bigger than 100, less than 99 or "
"exactly 100."
msgstr ""

#: lib/eventhandler/base.py:269
msgid ""
"This can be '>100', '<99', or '=100', to trigger the action, if the "
"difference between the tokeninfo field 'count_auth' and "
"'count_auth_success is bigger than 100, less than 99 or exactly 100."
msgstr ""

#: lib/eventhandler/base.py:277
msgid ""
"This can be '>9', '<9', or '=10', to trigger the action, if the "
"failcounter of a token matches this value. Note that the failcounter "
"stops increasing, if the max_failcount is reached."
msgstr ""

#: lib/eventhandler/base.py:285
msgid ""
"This condition can check any arbitrary tokeninfo field. You need to enter"
" something like '<fieldname> == <fieldvalue>', '<fieldname> > "
"<fieldvalue>' or '<fieldname> < <fieldvalue>'."
msgstr ""

#: lib/eventhandler/base.py:293
msgid ""
"This condition can check the value of an arbitrary event counter and "
"compare it like 'myCounter == 1000', 'myCounter > 1000' or 'myCounter < "
"1000'."
msgstr ""

#: lib/eventhandler/base.py:300
msgid ""
"Here you can enter a regular expression. The condition only applies if "
"the regular expression matches the detail->error->message in the "
"response."
msgstr ""

#: lib/eventhandler/base.py:307
msgid ""
"Here you can enter a regular expression. The condition only applies if "
"the regular expression matches the detail->message in the response."
msgstr ""

#: lib/eventhandler/base.py:314
msgid "Trigger the action, if the client IP matches."
msgstr ""

#: lib/eventhandler/counterhandler.py:68 lib/eventhandler/counterhandler.py:73
#: lib/eventhandler/counterhandler.py:81
msgid "The identifier/key of the counter."
msgstr ""

#: lib/eventhandler/counterhandler.py:76
msgid "Don't stop counter if it reaches zero."
msgstr ""

#: lib/eventhandler/federationhandler.py:75
msgid "The remote/child privacyIDEA Server."
msgstr ""

#: lib/eventhandler/federationhandler.py:80
msgid "Change the realm name to a realm on the child privacyIDEA system."
msgstr ""

#: lib/eventhandler/federationhandler.py:86
msgid "Change the resolver name to a resolver on the child privacyIDEA system."
msgstr ""

#: lib/eventhandler/federationhandler.py:92
msgid ""
"Forward the client IP to the child privacyIDEA server. Otherwise this "
"server will be the client."
msgstr ""

#: lib/eventhandler/federationhandler.py:99
msgid ""
"Forward the authorization header. This allows to also forward request "
"like token- and system-requests."
msgstr ""

#: lib/eventhandler/logginghandler.py:87
msgid "The name of the logging facility"
msgstr ""

#: lib/eventhandler/logginghandler.py:93
msgid "The string to write to the log"
msgstr ""

#: lib/eventhandler/logginghandler.py:99
msgid "The logging level for this logging notification"
msgstr ""

#: lib/eventhandler/requestmangler.py:100
msgid "The parameter that should be deleted."
msgstr ""

#: lib/eventhandler/requestmangler.py:106
msgid "The parameter that should be added or modified."
msgstr ""

#: lib/eventhandler/requestmangler.py:111
msgid ""
"The new value of the parameter. Can contain tags like {0}, {1} for the "
"matched sub strings."
msgstr ""

#: lib/eventhandler/requestmangler.py:116
msgid "The parameter, that should match some values."
msgstr ""

#: lib/eventhandler/requestmangler.py:120
msgid ""
"The value of the match_parameter. It can contain a regular expression and"
" '()' to transfer values to the new parameter."
msgstr ""

#: lib/eventhandler/responsemangler.py:81
msgid ""
"The JSON pointer (key) that should be deleted. Please specify in the "
"format '/detail/message'."
msgstr ""

#: lib/eventhandler/responsemangler.py:88
msgid ""
"The JSON pointer (key) that should be set. Please specify in the format "
"'/detail/message'."
msgstr ""

#: lib/eventhandler/responsemangler.py:94
msgid "The type of the value."
msgstr ""

#: lib/eventhandler/responsemangler.py:100
msgid "The value of the JSON key that should be set."
msgstr ""

#: lib/eventhandler/scripthandler.py:96
#: lib/smsprovider/ScriptSMSProvider.py:117
msgid ""
"Wait for script to complete or run script in background. This will either"
" return the HTTP request early or could also block the request."
msgstr ""

#: lib/eventhandler/scripthandler.py:104
msgid "On script error raise exception in HTTP request."
msgstr ""

#: lib/eventhandler/scripthandler.py:108
msgid ""
"Finish current transaction before running the script. This is useful if "
"changes to the database should be made available to the script or the "
"running request."
msgstr ""

#: lib/eventhandler/scripthandler.py:115
msgid "Add '--serial <serial number>' as script parameter."
msgstr ""

#: lib/eventhandler/scripthandler.py:120
msgid "Add '--user <username>' as script parameter."
msgstr ""

#: lib/eventhandler/scripthandler.py:125
msgid "Add '--realm <realm>' as script parameter."
msgstr ""

#: lib/eventhandler/scripthandler.py:130
msgid ""
"Add the username of the logged in user as script parameter like '--"
"logged_in_user <username>'."
msgstr ""

#: lib/eventhandler/scripthandler.py:136
msgid ""
"Add the role (either admin or user) of the logged in user as script "
"parameter like '--logged_in_role <role>'."
msgstr ""

#: lib/eventhandler/tokenhandler.py:128
msgid "set a new realm of the token"
msgstr ""

#: lib/eventhandler/tokenhandler.py:132
msgid ""
"The new realm will be the only realm of the token. I.e. all other realms "
"will be removed from this token. Otherwise the realm will be added to the"
" token."
msgstr ""

#: lib/eventhandler/tokenhandler.py:147
msgid "set the PIN of the token to a random PIN of this length."
msgstr ""

#: lib/eventhandler/tokenhandler.py:154
msgid "Token type to create"
msgstr ""

#: lib/eventhandler/tokenhandler.py:159
msgid "Assign token to user in request or to tokenowner."
msgstr ""

#: lib/eventhandler/tokenhandler.py:164
msgid "Set the realm of the newly created token."
msgstr ""

#: lib/eventhandler/tokenhandler.py:171
msgid "Dynamically read the mobile number from the user store."
msgstr ""

#: lib/eventhandler/tokenhandler.py:178
msgid "Dynamically read the email address from the user store."
msgstr ""

#: lib/eventhandler/tokenhandler.py:185
msgid "Use a specific SMTP server configuration for this token."
msgstr ""

#: lib/eventhandler/tokenhandler.py:192
msgid "Use a specific SMS gateway configuration for this token."
msgstr ""

#: lib/eventhandler/tokenhandler.py:197
msgid "A dictionary of additional init parameters."
msgstr ""

#: lib/eventhandler/tokenhandler.py:203
msgid ""
"Set the MOTP PIN of the MOTP token during enrollment. This is a required "
"value for enrolling MOTP tokens."
msgstr ""

#: lib/eventhandler/tokenhandler.py:212
msgid "The new description of the token."
msgstr ""

#: lib/eventhandler/tokenhandler.py:219
msgid ""
"The token will be valid starting at the given date. Can be a fixed date "
"or an offset like +10m, +24h, +7d."
msgstr ""

#: lib/eventhandler/tokenhandler.py:226
msgid ""
"The token will be valid until the given date. Can be a fixed date or an "
"offset like +10m, +24h, +7d."
msgstr ""

#: lib/eventhandler/tokenhandler.py:239
msgid "Set the new count window of the token."
msgstr ""

#: lib/eventhandler/tokenhandler.py:249
msgid "Set the failcounter of the token."
msgstr ""

#: lib/eventhandler/tokenhandler.py:259
msgid ""
"Increase or decrease the fail counter of the token. Values of +n, -n with"
" n being an integer are accepted."
msgstr ""

#: lib/eventhandler/tokenhandler.py:269
msgid "Set the maximum failcounter of the token."
msgstr ""

#: lib/eventhandler/tokenhandler.py:277
msgid "Set this tokeninfo key."
msgstr ""

#: lib/eventhandler/tokenhandler.py:282
msgid "Set the above key the this value."
msgstr ""

#: lib/eventhandler/tokenhandler.py:291
msgid "Delete this tokeninfo key."
msgstr ""

#: lib/eventhandler/usernotification.py:126
msgid "Send notification email via this email server."
msgstr ""

#: lib/eventhandler/usernotification.py:130
msgid "Either send email as plain text or HTML."
msgstr ""

#: lib/eventhandler/usernotification.py:134
msgid "Send QR-Code image as an attachment (cid URL: token_image)"
msgstr ""

#: lib/eventhandler/usernotification.py:139
msgid "The subject of the mail that is sent."
msgstr ""

#: lib/eventhandler/usernotification.py:143
msgid "The Reply-To header in the sent email."
msgstr ""

#: lib/eventhandler/usernotification.py:147
msgid "The body of the mail that is sent."
msgstr ""

#: lib/eventhandler/usernotification.py:151
#: lib/eventhandler/usernotification.py:189
msgid "Send notification to this user."
msgstr ""

#: lib/eventhandler/usernotification.py:172
msgid "Any email address, to which the notification should be sent."
msgstr ""

#: lib/eventhandler/usernotification.py:181
msgid "Send the user notification via a predefined SMS gateway."
msgstr ""

#: lib/eventhandler/usernotification.py:186
msgid "The text of the SMS."
msgstr ""

#: lib/eventhandler/usernotification.py:196
msgid ""
"This is the template content of the new file. Can contain the tags as "
"specified in the documentation."
msgstr ""

#: lib/eventhandler/usernotification.py:202
msgid ""
"The filename of the notification. Existing files are overwritten. The "
"name can contain tags as specified in the documentation and can also "
"contain the tag {random}."
msgstr ""

#: lib/machines/ldap.py:338
#, python-format
msgid "Your LDAP config seems to be OK, %i machine objects found."
msgstr ""

#: lib/resolvers/LDAPIdResolver.py:1043
msgid ""
"Your LDAP config found {0!s} user objects, but only {1!s} with the "
"specified uidtype"
msgstr ""

#: lib/resolvers/LDAPIdResolver.py:1046
msgid "Your LDAP config seems to be OK, {0!s} user objects found."
msgstr ""

#: lib/smsprovider/FirebaseProvider.py:219
msgid ""
"The URL the Push App should contact in the second enrollment step. "
"Usually it is the endpoint /ttype/push of the privacyIDEA server."
msgstr ""

#: lib/smsprovider/FirebaseProvider.py:223
msgid ""
"The second enrollment step must be completed within this time (in "
"minutes)."
msgstr ""

#: lib/smsprovider/FirebaseProvider.py:227
msgid ""
"The project ID, that the client should use. Get it from your Firebase "
"console."
msgstr ""

#: lib/smsprovider/FirebaseProvider.py:231
msgid ""
"The project number, that the client should use. Get it from your Firebase"
" console."
msgstr ""

#: lib/smsprovider/FirebaseProvider.py:236
msgid ""
"The App ID, that the Android client should use. Get it from your Firebase"
" console."
msgstr ""

#: lib/smsprovider/FirebaseProvider.py:241
msgid ""
"The API Key, that the Android client should use. Get it from your "
"Firebase console."
msgstr ""

#: lib/smsprovider/FirebaseProvider.py:246
msgid ""
"The App ID, that the iOS client should use. Get it from your Firebase "
"console."
msgstr ""

#: lib/smsprovider/FirebaseProvider.py:251
msgid ""
"The API Key, that the iOS client should use. Get it from your Firebase "
"console."
msgstr ""

#: lib/smsprovider/FirebaseProvider.py:256
msgid ""
"The filename of the JSON config file, that allows privacyIDEA to talk to "
"the Firebase REST API."
msgstr ""

#: lib/smsprovider/FirebaseProvider.py:261
msgid "Proxy setting for HTTPS connections to googleapis.com."
msgstr ""

#: lib/smsprovider/HttpSMSProvider.py:241
msgid "The base URL of the HTTP Gateway"
msgstr ""

#: lib/smsprovider/HttpSMSProvider.py:244
msgid "Should the HTTP Gateway be connected via an HTTP GET or POST request."
msgstr ""

#: lib/smsprovider/HttpSMSProvider.py:249
msgid ""
"Specify a substring, that indicates, that the SMS was delivered "
"successfully."
msgstr ""

#: lib/smsprovider/HttpSMSProvider.py:253
msgid "Specify a substring, that indicates, that the SMS failed to be delivered."
msgstr ""

#: lib/smsprovider/HttpSMSProvider.py:257
msgid "Username in case of basic authentication."
msgstr ""

#: lib/smsprovider/HttpSMSProvider.py:261
msgid "Password in case of basic authentication."
msgstr ""

#: lib/smsprovider/HttpSMSProvider.py:265
msgid "Should the SSL certificate be verified."
msgstr ""

#: lib/smsprovider/HttpSMSProvider.py:270
msgid ""
"Regular expression to modify the phone number to make it compatible with "
"provider. Enter something like '/[\\+/]//' to remove pluses and slashes."
msgstr ""

#: lib/smsprovider/HttpSMSProvider.py:275
msgid ""
"An optional proxy string. DEPRECATED. Do not use this anymore. Rather use"
" HTTP_PROXY for http connections and HTTPS_PROXY for https connection. "
"The PROXY option will be removed in future."
msgstr ""

#: lib/smsprovider/HttpSMSProvider.py:280
msgid "Proxy setting for HTTP connections."
msgstr ""

#: lib/smsprovider/HttpSMSProvider.py:281
msgid "Proxy setting for HTTPS connections."
msgstr ""

#: lib/smsprovider/HttpSMSProvider.py:282
msgid "The timeout in seconds."
msgstr ""

#: lib/smsprovider/ScriptSMSProvider.py:112
msgid ""
"The script in script directory PI_SCRIPT_SMSPROVIDER_DIRECTORY to call. "
"Expects phone as the parameter and the message from stdin."
msgstr ""

#: lib/smsprovider/SmppSMSProvider.py:129
msgid "SMSC Host IP"
msgstr ""

#: lib/smsprovider/SmppSMSProvider.py:132
msgid "SMSC Port"
msgstr ""

#: lib/smsprovider/SmppSMSProvider.py:134
msgid "SMSC Service ID"
msgstr ""

#: lib/smsprovider/SmppSMSProvider.py:136
msgid "Password for authentication on SMSC"
msgstr ""

#: lib/smsprovider/SmppSMSProvider.py:138
msgid "SOURCE_ADDR_TON Special Flag"
msgstr ""

#: lib/smsprovider/SmppSMSProvider.py:140
msgid "S_ADDR_NPI Special Flag"
msgstr ""

#: lib/smsprovider/SmppSMSProvider.py:142
msgid "Source address (SMS sender)"
msgstr ""

#: lib/smsprovider/SmppSMSProvider.py:143
msgid "DESTINATION_ADDR_TON Special Flag"
msgstr ""

#: lib/smsprovider/SmppSMSProvider.py:144
msgid "D_ADDR_NPI Special Flag"
msgstr ""

#: lib/task/eventcounter.py:42
msgid "The name of the event counter to read."
msgstr ""

#: lib/task/eventcounter.py:47
msgid "The name of the stats key to write to the MonitoringStats table."
msgstr ""

#: lib/task/eventcounter.py:53
msgid ""
"Whether to reset the event_counter, if it is read and written to the "
"MonitoringStats table."
msgstr ""

#: lib/task/simplestats.py:48
msgid "Total number of tokens"
msgstr ""

#: lib/task/simplestats.py:51
msgid "Total number of hardware tokens"
msgstr ""

#: lib/task/simplestats.py:54
msgid "Total number of software tokens"
msgstr ""

#: lib/task/simplestats.py:57
msgid "Number of hardware tokens not assigned to a user"
msgstr ""

#: lib/task/simplestats.py:60
msgid "Number of tokens assigned to users"
msgstr ""

#: lib/task/simplestats.py:63
msgid "Number of users with tokens assigned"
msgstr ""

#: lib/tokens/certificatetoken.py:273
msgid "Certificate: Enroll an x509 Certificate Token."
msgstr ""

#: lib/tokens/certificatetoken.py:284
msgid "The user may only have this maximum number of certificates assigned."
msgstr ""

#: lib/tokens/certificatetoken.py:289
msgid ""
"The user may only have this maximum number of active certificates "
"assigned."
msgstr ""

#: lib/tokens/certificatetoken.py:294
msgid ""
"Enrolling a certificate token can require an attestation certificate. "
"(Default: ignore)"
msgstr ""

#: lib/tokens/certificatetoken.py:305 lib/tokens/certificatetoken.py:312
msgid "The directory containing attestation certificate chains."
msgstr ""

#: lib/tokens/daplugtoken.py:121
msgid "event based OTP token using the HOTP algorithm"
msgstr ""

#: lib/tokens/daplugtoken.py:127
msgid "The user may only have this maximum number of daplug tokens assigned."
msgstr ""

#: lib/tokens/daplugtoken.py:132
msgid ""
"The user may only have this maximum number of active daplug tokens "
"assigned."
msgstr ""

#: lib/tokens/emailtoken.py:152
msgid "EMail Token"
msgstr ""

#: lib/tokens/emailtoken.py:154
msgid "EMail: Send a One Time Password to the users email address."
msgstr ""

#: lib/tokens/emailtoken.py:162
msgid ""
"The text that will be sent via EMail for an EMail token. Use <otp> and "
"<serial> as parameters. You may also specify a filename as email template"
" starting with \"file:\"."
msgstr ""

#: lib/tokens/emailtoken.py:168
msgid ""
"The subject of the EMail for an EMail token. Use <otp> and <serial> as "
"parameters."
msgstr ""

#: lib/tokens/emailtoken.py:173
msgid ""
"If set, a new EMail OTP will be sent after successful authentication with"
" one EMail OTP."
msgstr ""

#: lib/tokens/emailtoken.py:178
msgid ""
"Use an alternate challenge text for telling the user to enter the code "
"from the eMail."
msgstr ""

#: lib/tokens/emailtoken.py:185
msgid "The user may only have this maximum number of email tokens assigned."
msgstr ""

#: lib/tokens/emailtoken.py:190
msgid ""
"The user may only have this maximum number of active email tokens "
"assigned."
msgstr ""

#: lib/tokens/emailtoken.py:270
msgid "Enter the OTP from the Email:"
msgstr ""

#: lib/tokens/foureyestoken.py:132
msgid "4Eyes Token: Use tokens of two or more users to authenticate"
msgstr ""

#: lib/tokens/foureyestoken.py:143
msgid "The user may only have this maximum number of 4eyes tokens assigned."
msgstr ""

#: lib/tokens/foureyestoken.py:148
msgid ""
"The user may only have this maximum number of active 4eyes tokens "
"assigned."
msgstr ""

#: lib/tokens/hotptoken.py:118
msgid "Specify the hashlib to be used. Can be sha1 (1) or sha2-256 (2)."
msgstr ""

#: lib/tokens/hotptoken.py:120
msgid "Specify the otplen to be used. Can be 6 or 8 digits."
msgstr ""

#: lib/tokens/hotptoken.py:121 lib/tokens/totptoken.py:134
msgid "Specify whether users are allowed or forced to use two-step enrollment."
msgstr ""

#: lib/tokens/hotptoken.py:123 lib/tokens/totptoken.py:154
msgid "Specify whether admins are allowed or forced to use two-step enrollment."
msgstr ""

#: lib/tokens/hotptoken.py:127
msgid "HOTP: Event based One Time Passwords."
msgstr ""

#: lib/tokens/hotptoken.py:135
msgid "The user may only have this maximum number of HOTP tokens assigned."
msgstr ""

#: lib/tokens/hotptoken.py:140
msgid "The user may only have this maximum number of active HOTP tokens assigned."
msgstr ""

#: lib/tokens/hotptoken.py:145
msgid "The Yubikey access code used to initialize Yubikeys."
msgstr ""

#: lib/tokens/hotptoken.py:150 lib/tokens/totptoken.py:160
msgid "The size of the OTP seed part contributed by the client (in bytes)"
msgstr ""

#: lib/tokens/hotptoken.py:155 lib/tokens/totptoken.py:163
msgid "The size of the OTP seed part contributed by the server (in bytes)"
msgstr ""

#: lib/tokens/hotptoken.py:160 lib/tokens/totptoken.py:166
msgid ""
"The difficulty factor used for the OTP seed generation (should be at "
"least 10000)"
msgstr ""

#: lib/tokens/hotptoken.py:165 lib/tokens/totptoken.py:171
msgid "Enforce setting an app pin for the privacyIDEA Authenticator App"
msgstr ""

#: lib/tokens/hotptoken.py:180 lib/tokens/totptoken.py:129
msgid "Force the key to be generated on the server."
msgstr ""

#: lib/tokens/hotptoken.py:270
msgid "URL for google Authenticator"
msgstr ""

#: lib/tokens/hotptoken.py:284
msgid "URL for OATH token"
msgstr ""

#: lib/tokens/indexedsecrettoken.py:51
msgid "Please enter the positions {0!s} from your secret."
msgstr ""

#: lib/tokens/indexedsecrettoken.py:97
msgid "Indexed Secret Token"
msgstr ""

#: lib/tokens/indexedsecrettoken.py:99
msgid "IndexedSecret: Request certain positions of a shared secret from the user."
msgstr ""

#: lib/tokens/indexedsecrettoken.py:106
msgid ""
"Use an alternate challenge text for telling the user which positions of "
"the secret he should enter."
msgstr ""

#: lib/tokens/indexedsecrettoken.py:112
msgid "Number of necessary positions to be answered by the user."
msgstr ""

#: lib/tokens/indexedsecrettoken.py:119
msgid "Preset the enrollment with the value of the given attribute."
msgstr ""

#: lib/tokens/indexedsecrettoken.py:126 lib/tokens/indexedsecrettoken.py:133
msgid "The attribute whose value should be force set during enrollment."
msgstr ""

#: lib/tokens/indexedsecrettoken.py:140
msgid ""
"The user may only have this maximum number of indexed secret tokens "
"assigned."
msgstr ""

#: lib/tokens/indexedsecrettoken.py:145
msgid ""
"The user may only have this maximum number of active indexed secret "
"tokens assigned."
msgstr ""

#: lib/tokens/motptoken.py:105
msgid "The user may only have this maximum number of mOTP tokens assigned."
msgstr ""

#: lib/tokens/motptoken.py:110
msgid "The user may only have this maximum number of active mOTP tokens assigned."
msgstr ""

#: lib/tokens/motptoken.py:153
msgid "URL for MOTP token"
msgstr ""

#: lib/tokens/ocratoken.py:91
msgid "OCRA: Enroll an OCRA token."
msgstr ""

#: lib/tokens/ocratoken.py:101
msgid "The user may only have this maximum number of OCRA tokens assigned."
msgstr ""

#: lib/tokens/ocratoken.py:106
msgid "The user may only have this maximum number of active OCRA tokens assigned."
msgstr ""

#: lib/tokens/papertoken.py:107 lib/tokens/tantoken.py:107
msgid "The number of OTP values, which are printed on the paper."
msgstr ""

#: lib/tokens/papertoken.py:112
msgid "The user may only have this maximum number of paper tokens assigned."
msgstr ""

#: lib/tokens/papertoken.py:117
msgid ""
"The user may only have this maximum number of active paper tokens "
"assigned."
msgstr ""

#: lib/tokens/passwordtoken.py:103
msgid ""
"A token with a fixed password. Can be combined  with the OTP PIN. Is used"
" for the lost token scenario."
msgstr ""

#: lib/tokens/passwordtoken.py:115
msgid "The user may only have this maximum number of password tokens assigned."
msgstr ""

#: lib/tokens/passwordtoken.py:120
msgid ""
"The user may only have this maximum number of active password tokens "
"assigned."
msgstr ""

#: lib/tokens/pushtoken.py:70
msgid "Please confirm the authentication on your mobile device!"
msgstr ""

#: lib/tokens/pushtoken.py:71
msgid "Do you want to confirm the login?"
msgstr ""

#: lib/tokens/pushtoken.py:292
msgid "PUSH Token"
msgstr ""

#: lib/tokens/pushtoken.py:294
msgid "PUSH: Send a push notification to a smartphone."
msgstr ""

#: lib/tokens/pushtoken.py:302
msgid "The configuration of your Firebase application."
msgstr ""

#: lib/tokens/pushtoken.py:308
msgid "The smartphone needs to verify SSL during the enrollment. (default 1)"
msgstr ""

#: lib/tokens/pushtoken.py:314
msgid "The user may only have this maximum number of Push tokens assigned."
msgstr ""

#: lib/tokens/pushtoken.py:319
msgid "The user may only have this maximum number of active Push tokens assigned."
msgstr ""

#: lib/tokens/pushtoken.py:326
msgid "The question the user sees on his mobile phone."
msgstr ""

#: lib/tokens/pushtoken.py:331
msgid "The title of the notification, the user sees on his mobile phone."
msgstr ""

#: lib/tokens/pushtoken.py:336
msgid "The smartphone needs to verify SSL during authentication. (default 1)"
msgstr ""

#: lib/tokens/pushtoken.py:342
msgid ""
"Wait for number of seconds for the user to confirm the challenge in the "
"first request."
msgstr ""

#: lib/tokens/pushtoken.py:348
msgid "Configure whether to allow push tokens to poll for challenges"
msgstr ""

#: lib/tokens/pushtoken.py:473
msgid "URL for privacyIDEA Push Token"
msgstr ""

#: lib/tokens/questionnairetoken.py:98
msgid "Questionnaire: Enroll Questions for the user."
msgstr ""

#: lib/tokens/questionnairetoken.py:109
msgid "The user has to answer this number of questions during authentication."
msgstr ""

#: lib/tokens/questionnairetoken.py:117
msgid ""
"The user may only have this maximum number of questionaire tokens "
"assigned."
msgstr ""

#: lib/tokens/questionnairetoken.py:122
msgid ""
"The user may only have this maximum number of active questionaire tokens "
"assigned."
msgstr ""

#: lib/tokens/questionnairetoken.py:166
#, python-format
msgid "You need to provide at least %s answers."
msgstr ""

#: lib/tokens/radiustoken.py:108
msgid "RADIUS: Forward authentication request to a RADIUS server."
msgstr ""

#: lib/tokens/radiustoken.py:117
msgid "The user may only have this maximum number of RADIUS tokens assigned."
msgstr ""

#: lib/tokens/radiustoken.py:122
msgid ""
"The user may only have this maximum number of active RADIUS tokens "
"assigned."
msgstr ""

#: lib/tokens/registrationtoken.py:127
msgid ""
"Registration: A token that creates a registration code that can be used "
"as a second factor once."
msgstr ""

#: lib/tokens/registrationtoken.py:139
msgid ""
"The user may only have this maximum number of registration tokens "
"assigned."
msgstr ""

#: lib/tokens/registrationtoken.py:144
msgid ""
"The user may only have this maximum number of active registration tokens "
"assigned."
msgstr ""

#: lib/tokens/remotetoken.py:113
msgid "Remote Token: Forward authentication request to another server."
msgstr ""

#: lib/tokens/remotetoken.py:122 lib/tokens/totptoken.py:176
msgid "The user may only have this maximum number of remote tokens assigned."
msgstr ""

#: lib/tokens/remotetoken.py:127 lib/tokens/totptoken.py:181
msgid ""
"The user may only have this maximum number of active remote tokens "
"assigned."
msgstr ""

#: lib/tokens/smstoken.py:198
msgid "SMS Token"
msgstr ""

#: lib/tokens/smstoken.py:200
msgid "SMS: Send a One Time Password to the users mobile phone."
msgstr ""

#: lib/tokens/smstoken.py:209
msgid ""
"The text that will be send via SMS for an SMS token. Use <otp> and "
"<serial> as parameters."
msgstr ""

#: lib/tokens/smstoken.py:214
msgid ""
"If set, a new SMS OTP will be sent after successful authentication with "
"one SMS OTP."
msgstr ""

#: lib/tokens/smstoken.py:219
msgid ""
"Use an alternate challenge text for telling the user to enter the code "
"from the SMS."
msgstr ""

#: lib/tokens/smstoken.py:227
msgid "Choose the gateways the administrator is allowed to set."
msgstr ""

#: lib/tokens/smstoken.py:235
msgid "Choose the gateways the user is allowed to set."
msgstr ""

#: lib/tokens/smstoken.py:242
msgid "The user may only have this maximum number of SMS tokens assigned."
msgstr ""

#: lib/tokens/smstoken.py:247
msgid "The user may only have this maximum number of active SMS tokens assigned."
msgstr ""

#: lib/tokens/smstoken.py:322
msgid "Enter the OTP from the SMS:"
msgstr ""

#: lib/tokens/spasstoken.py:87
msgid "SPass: Simple Pass token. Static passwords."
msgstr ""

#: lib/tokens/spasstoken.py:99
msgid "The user may only have this maximum number of SPASS tokens assigned."
msgstr ""

#: lib/tokens/spasstoken.py:104
msgid ""
"The user may only have this maximum number of active SPASS tokens "
"assigned."
msgstr ""

#: lib/tokens/sshkeytoken.py:85
msgid "SSH Public Key: The public SSH key."
msgstr ""

#: lib/tokens/sshkeytoken.py:94
msgid "The user may only have this maximum number of SSH keys assigned."
msgstr ""

#: lib/tokens/sshkeytoken.py:99
msgid "The user may only have this maximum number of active SSH keys assigned."
msgstr ""

#: lib/tokens/tantoken.py:112
msgid "The user may only have this maximum number of TAN tokens assigned."
msgstr ""

#: lib/tokens/tantoken.py:117
msgid "The user may only have this maximum number of active TAN tokens assigned."
msgstr ""

#: lib/tokens/tiqrtoken.py:158
msgid "TiQR: Enroll a TiQR token."
msgstr ""

#: lib/tokens/tiqrtoken.py:168
msgid "The user may only have this maximum number of TiQR tokens assigned."
msgstr ""

#: lib/tokens/tiqrtoken.py:173
msgid "The user may only have this maximum number of active TiQR tokens assigned."
msgstr ""

#: lib/tokens/tiqrtoken.py:238
msgid "URL for TiQR enrollment"
msgstr ""

#: lib/tokens/tiqrtoken.py:396
msgid "Please scan the QR Code"
msgstr ""

#: lib/tokens/totptoken.py:108
msgid "TOTP: Time based One Time Passwords."
msgstr ""

#: lib/tokens/u2ftoken.py:253
msgid "This is a list of FQDN hostnames trusting the registered U2F tokens."
msgstr ""

#: lib/tokens/u2ftoken.py:257
msgid ""
"Use an alternate challenge text for telling the user to confirm with his "
"U2F device."
msgstr ""

#: lib/tokens/u2ftoken.py:264
msgid "Only specified U2F tokens are authorized."
msgstr ""

#: lib/tokens/u2ftoken.py:272
msgid "Only specified U2F tokens are allowed to be registered."
msgstr ""

#: lib/tokens/u2ftoken.py:277
msgid "Do not verify the U2F attestation certificate."
msgstr ""

#: lib/tokens/u2ftoken.py:282
msgid "The user may only have this maximum number of U2F tokens assigned."
msgstr ""

#: lib/tokens/u2ftoken.py:287
msgid "The user may only have this maximum number of active U2F tokens assigned."
msgstr ""

#: lib/tokens/u2ftoken.py:365
msgid "You need to define the appId in the token config!"
msgstr ""

#: lib/tokens/u2ftoken.py:432
msgid "Please confirm with your U2F token ({0!s})"
msgstr ""

#: lib/tokens/vascotoken.py:101
msgid "VASCO Token: Authentication using VASCO tokens"
msgstr ""

#: lib/tokens/vascotoken.py:110
msgid "The user may only have this maximum number of Vasco tokens assigned."
msgstr ""

#: lib/tokens/vascotoken.py:115
msgid ""
"The user may only have this maximum number of active Vasco tokens "
"assigned."
msgstr ""

#: lib/tokens/webauthntoken.py:410
msgid "Generic WebAuthn Token"
msgstr ""

#: lib/tokens/webauthntoken.py:420
msgid "Please confirm with your WebAuthn token ({0!s})"
msgstr ""

#: lib/tokens/webauthntoken.py:421
msgid "Please confirm with your WebAuthn token"
msgstr ""

#: lib/tokens/webauthntoken.py:563
msgid ""
"A list of transports to prefer to communicate with WebAuthn tokens. "
"Default: usb ble nfc internal (All standard transports)"
msgstr ""

#: lib/tokens/webauthntoken.py:568
msgid ""
"The time in seconds the user has to confirm authorization on his WebAuthn"
" token. Note: You will want to increase the ChallengeValidityTime along "
"with this. Default: 60"
msgstr ""

#: lib/tokens/webauthntoken.py:574
msgid ""
"Whether the user's identity should be verified when authenticating with a"
" WebAuthn token. Default: preferred (verify the user if supported by the "
"token)"
msgstr ""

#: lib/tokens/webauthntoken.py:584
msgid ""
"Use an alternative challenge text for telling the user to confirm with "
"his WebAuthn token."
msgstr ""

#: lib/tokens/webauthntoken.py:591
msgid ""
"A list of WebAuthn authenticators acceptable for authorization, given as "
"a space-separated list of AAGUIDs. Per default all authenticators are "
"acceptable."
msgstr ""

#: lib/tokens/webauthntoken.py:597
msgid "Only the specified WebAuthn-tokens are authorized."
msgstr ""

#: lib/tokens/webauthntoken.py:604
msgid "A human readable name for the organization rolling out WebAuthn tokens."
msgstr ""

#: lib/tokens/webauthntoken.py:609
msgid ""
"A domain name that is a subset of the respective FQDNs for all the "
"webservices the users should be able to sign in to using WebAuthn tokens."
msgstr ""

#: lib/tokens/webauthntoken.py:615
msgid ""
"The time in seconds the user has to confirm enrollment on his WebAuthn "
"token. Note: You will want to increase the ChallengeValidityTime along "
"with this. Default: 60"
msgstr ""

#: lib/tokens/webauthntoken.py:622
msgid ""
"Whether to limit roll out of WebAuthn tokens to either only platform "
"authenticators, or only cross-platform authenticators. Default: either"
msgstr ""

#: lib/tokens/webauthntoken.py:633
msgid ""
"A list of WebAuthn authenticators acceptable for enrollment, given as a "
"space-separated list of AAGUIDs. Per default all authenticators are "
"acceptable."
msgstr ""

#: lib/tokens/webauthntoken.py:639
msgid ""
"Whether the user's identity should be verified when rolling out a new "
"WebAuthn token. Default: preferred (verify the user if supported by the "
"token)"
msgstr ""

#: lib/tokens/webauthntoken.py:650
msgid ""
"Which algorithm to use for creating public key credentials for WebAuthn "
"tokens. Default: ecdsa_preferred"
msgstr ""

#: lib/tokens/webauthntoken.py:662
msgid ""
"Whether to request attestation data when enrolling a new WebAuthn token. "
"Note: for u2f_req to work with WebAuthn, this cannot be set to none. "
"Default: direct (ask for non-anonymized attestation data)"
msgstr ""

#: lib/tokens/webauthntoken.py:674
msgid ""
"Whether and how strictly to check authenticator attestation data. Note: "
"If the attestation form is none, the attestation level needs to also be "
"none. Default: untrusted (attestation is required, but can be unknown or "
"self-signed)"
msgstr ""

#: lib/tokens/webauthntoken.py:686
msgid "Only the specified WebAuthn-tokens are allowed to be registered."
msgstr ""

#: lib/tokens/webauthntoken.py:691
msgid "The user may only have this number of WebAuthn tokens assigned."
msgstr ""

#: lib/tokens/webauthntoken.py:696
msgid "The user may only have this number of active WebAuthn tokens assigned."
msgstr ""

#: lib/tokens/webauthntoken.py:701
msgid ""
"Use an alternate challenge text for telling the user to confirm with his "
"WebAuthn device."
msgstr ""

#: lib/tokens/yubicotoken.py:103
msgid "Yubikey Cloud mode: Forward authentication request to YubiCloud."
msgstr ""

#: lib/tokens/yubicotoken.py:112
msgid "The user may only have this maximum number of Yubico tokens assigned."
msgstr ""

#: lib/tokens/yubicotoken.py:117
msgid ""
"The user may only have this maximum number of active Yubico tokens "
"assigned."
msgstr ""

#: lib/tokens/yubikeytoken.py:161
msgid "Yubikey AES mode: One Time Passwords with Yubikey."
msgstr ""

#: lib/tokens/yubikeytoken.py:170
msgid "The user may only have this maximum number of Yubikey tokens assigned."
msgstr ""

#: lib/tokens/yubikeytoken.py:175
msgid ""
"The user may only have this maximum number of active Yubikey tokens "
"assigned."
msgstr ""

#: lib/utils/compare.py:171
msgid "true if the value of the left attribute contains the right value"
msgstr ""

#: lib/utils/compare.py:172
msgid "false if the value of the left attribute contains the right value"
msgstr ""

#: lib/utils/compare.py:174
msgid "true if the value of the left attribute equals the right value"
msgstr ""

#: lib/utils/compare.py:175
msgid "false if the value of the left attribute equals the right value"
msgstr ""

#: lib/utils/compare.py:177
msgid ""
"true if the value of the left attribute completely matches the given "
"regular expression pattern on the right"
msgstr ""

#: lib/utils/compare.py:178
msgid ""
"false if the value of the left attribute completely matches the given "
"regular expression pattern on the right"
msgstr ""

#: lib/utils/compare.py:180
msgid ""
"true if the value of the left attribute is contained in the comma-"
"separated values on the right"
msgstr ""

#: lib/utils/compare.py:181
msgid ""
"false if the value of the left attribute is contained in the comma-"
"separated values on the right"
msgstr ""
